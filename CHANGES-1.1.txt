CHANGES-1.1.txt
---------------

CHANGES IN CUPS V1.1.15

	- Updated the CUPS license agreement for the new MacOS
	  license exception.
	- The PostScript filter now supports the Orientation
	  comment and rotates the page as needed automatically.
	- Revamped the makefiles slightly to use automatically
	  generated dependencies.
	- Build fixes for OS X.
	- The TIFF reading code depended on the newest version
	  of libtiff; now conditionally compile that portion of
	  the loader.
	- The PPD code now decodes all JCL options in the
	  JCLSetup group, not just those options that start with
	  the prefix "JCL".
	- The backends now read print data using the read()
	  system call to ensure that the current page is printed
	  while the next page is being processed.
	- The pdftops filter did not support shading type 3
	  (radial fill) for the "sh" operator.
	- The cups-polld program now throttles the local
	  broadcasts of polled printers and classes so that the
	  local system is not overwhelmed with hundreds of
	  printers and classes all at once.
	- Updated the serial backend to support 230,400 baud for
	  the Linux PPC port.
	- The cupsGetJobs() function wouldn't report completed
	  jobs that did not have a document-format attribute
	  value.
	- The cupsEncodeOptions() function now maintains a table
	  of known boolean and numeric options, and encodes all
	  other options as strings.
	- Now add a newline before the end-of-page code in the
	  PostScript filter; this fixes a problem with files
	  that don't end with a newline.
	- The image filters looked for the "orientation" option
	  instead of the correctly named "orientation-requested"
	  option.
	- The cupsEncodeOptions() function now handles mixed
	  integers and ranges.
	- New translation guide for developers to provide native
	  language support for CUPS.


CHANGES IN CUPS V1.1.14

	- The ippRead() function did not verify that the
	  attribute name length or string with language value
	  was not larger than the read buffer.
	- The scheduler set the signal handlers before loading
	  the configuration files the first time; this prevented
	  the RunAsUser directive from blocking server reloads.
	- Added Swedish message catalog.
	- The parallel backend now recognizes the /dev/printers
	  device directory under Linux 2.4.x.
	- MacOS X fixes.
	- The cupsaddsmb utility sent the server name after the
	  user information when executing the rpcclient program.
	  This caused problems with some versions of SAMBA
	  2.2.x.
	- The IPP backend did not pass the requesting user name
	  when checking on the print job status. This prevented
	  it from waiting for the job to complete when
	  communicating with some IPP implementations that
	  require it.


CHANGES IN CUPS V1.1.13

	- The lpstat command did not report jobs submitted to
	  regular printer classes.
	- The texttops filter didn't use sufficient precision
	  when positioning text with some values of cpi and lpi.
	  This could cause the alignment of text to stray.
	- cupsGetDests() didn't merge the options from the
	  /etc/cups/lpoptions file with ~/.lpoptions - options
	  in ~/.lpoptions overrode them completely.
	- Added support for KOI8-R and KOI8-U character sets,
	  and added several Russian message catalogs.
	- The scheduler put the wrong timezone offset in the log
	  files (e.g. +0500 instead of -0500 for EST...)
	- The scheduler did not ignore trailing whitespace in
	  *.convs files.
	- The scheduler now forces all processes to exit (kill
	  -9) when it is stopped.  This prevents parallel and
	  USB devices from running in the background after cupsd
	  goes away.
	- The cupsParseOptions() function didn't skip trailing
	  whitespace after quoted values.
	- More changes to support CUPS on OS/2.
	- Added Simplified Chinese message catalog.
	- Added PAM support for IRIX.
	- The cupsGetPPD() function didn't remove the @server
	  portion of the printer name, and since it would
	  connect immediately to the remote server instead of
	  the local server, the printer would not be found.
	- Classification and page labels were not rotated to
	  match the page orientation.
	- Now set the TCP "no delay" option on network
	  connections to improve performance/response time.
	- Improved the IRIX printing tools support with patches
	  from Andrea Suatoni.
	- Added a new PrintcapGUI directive to specify the GUI
	  option panel program to use for the IRIX printing
	  tools support.
	- The cupsGetDests() function did not check to see if a
	  user-defined default printer (set via lpoptions) still
	  existed.
	- The pstops filter no longer assumes that the default
	  dictionary is writable when doing N-up processing.
	- The pstops filter now supports printing N-up with the
	  page-set option.
	- The imagetoraster filter now supports direct printing
	  of CMYK image data without conversion/correction.
	- The IPP backend now reports printer state/error
	  conditions when possible (toner low, media empty,
	  etc.)
	- The lpstat command now supports the (undocumented)
	  IRIX -l option ("-lprintername") for a compact job
	  listing for a printer.
	- The lpstat command now includes printer date/time
	  information in the output (always Jan 01 00:00) to
	  make third-party tools happy.
	- The text filter now supports non-integer cpi and lpi
	  values.
	- The Margins field in the CUPS raster header was not
	  initialized by the pstoraster filter.
	- Added --with-optim="flags" option to configure script.
	- Updated the Italian message translations.
	- Updated the cups.list file to install the correct
	  files.
	- The pstoraster filter accessed the third element of a
	  2 element array.
	- The scheduler did not setup a status pipe for polling
	  processes, so error messages went to whatever file
	  descriptor 2 was pointing to when they were started.
	- The httpMD5Final() function didn't put a colon between
	  the password and nonce strings.
	- The pstops filter did not default to Binary data for
	  "%%BeginData:".
	- The pstops filter did not stop processing when a line
	  containing a CTRL-D is seen.
	- The scheduler no longer replaces the JobSheets values
	  from the printers.conf and classes.conf files with the
	  classification level, if set.  This way the original
	  banner settings are preserved when classification
	  levels are changed or turned off.
	- The serial backend didn't drain the output queue, nor
	  did it restore the original settings.
	- Updated the default system group under MacOS X.
	- If no SystemGroup was defined in cupsd.conf, the
	  system default group was not used.
	- The cups-lpd mini-daemon now supports LPD clients that
	  send multiple control files.
	- httpConnectEncrypt() now always uses encryption for
	  connections on port 443, since port 443 is reserved
	  for the "https" scheme.
	- Group authentication via certificates did not work
	  from the web interface for accounts other than
	  "root".	
	- The serial port backend did not clear the OPOST
	  option, which could cause problems with some printers.
	- The cups-lpd mini-daemon didn't lookup the client IP
	  address properly.
	- The parallel backend now identifies the polled and
	  interrupt-driven devices under *BSD.
	- The scheduler allowed the "always" encryption mode
	  inside a Location, which is not valid.
	- The CUPS startup script now checks for the timezone
	  information under Linux.
	- Now also map the sides attribute to the JCLDuplex
	  option (if present) in PPD files.
	- Updated pdftops to Xpdf 0.93a.
	- Added support for MD5 passwords under Slackware.
	- Added new AuthType BasicDigest that does Basic
	  authentication using the MD5 password file managed by
	  the lppasswd command.
	- The banner page attribute substitution code now
	  retains {name} sequences in banner files when the
	  named attribute is undefined.  Use {?name} to
	  conditionally substitute an IPP attribute.
	- The scheduler now ensures that the ServerRoot
	  directory and configuration files are owned by and
	  writable by the User and Group in cupsd.conf.
	- The USB backend now lists all USB printer devices
	  regardless of whether a printer is connected or not. 
	  This allows new USB printers to be connected without
	  restarting cupsd.
	- Added some more minor performance tweeks to the IPP
	  protocol code to reduce copying and array indexing.
	- The cupsaddsmb utility now uses the -c option with
	  smbclient and rpcclient to avoid the read length limit
	  for commands on the standard input.
	- Added an include file to the CRD handling code in
	  pstoraster so that it would compile properly on 64-bit
	  pointer platforms...


CHANGES IN CUPS V1.1.12

	- Added "Polish" to the list of known languages for PPD
	  files.
	- Added missing directory definition to cups-config.
	- The CUPS-Move-Job operation did not set the
	  destination type for the new destination.
	- The CUPS-Add-Printer operation did not support the
	  allow=all or deny=none values to clear the per-user
	  printer ACLs.
	- The SetPrinterAttrs() function did not handle invalid
	  PPD files that were missing the required NickName
	  attribute.  It now looks for NickName, ModelName, and
	  then substitutes the string "Bad PPD File" for the
	  printer-make-and-model attribute.


CHANGES IN CUPS V1.1.11

	- Added support for embedded TrueType fonts in PDF
	  files.
	- Added support for PostScript functions in PDF
	  files.
	- Added new "cupsaddsmb" utility for exporting
	  CUPS printer drivers to SAMBA/Windows clients.
	- Added preliminary support for Darwin/MacOS X.
	- The CUPS-Add-Printer operation no longer allows
	  arbitrary scheme names in device URIs to be used - it
	  now restricts the available schemes to those found in
	  the device list (lpinfo -m).
	- The ippRead() and ipp_read_file() functions could not
	  handle more than IPP_MAX_VALUES (100) values in a
	  1setOf attribute.  These functions have been updated
	  to dynamically allocate more memory as needed, and the
	  IPP_MAX_VALUES constant now represents the allocation
	  increment.  [this caused some versions of the
	  GIMP-print drivers to fail since the number of media
	  options exceeded 100...]
	- The scheduler could crash when BrowseShortNames
	  was set to "No".
	- The scheduler did not prevent MaxClients from being
	  set to 0, which could cause the scheduler to go in an
	  infinite loop when accepting a request.
	- Made some performance optimizations in the ippRead()
	  functions to make IPP request/response processing
	  faster.
	- The accept/reject/enable/disable command did not
	  support properly support the "-h" or default
	  server name.
	- The scheduler did not save the quota configuration
	  when the job-quota-period attribute was set to 0.
	- The LPDEST and PRINTER environment variables did not
	  support printer instances.
	- The text filter now handles more types of boldface and
	  underline formatting.
	- The cupsTempFd() function did not fail if the
	  temporary directory did not exist; this would cause it
	  to loop indefinitely instead of returning an error
	  (-1).
	- Stopping (disabling) a printer class did not stop jobs
	  from printing to printers in that class.
	- The cupsGetDests() function was sending the
	  requested-attributes attribute as a name instead of a
	  keyword; this caused a serious performance problem on
	  slower systems since more information had to be
	  transferred from server to client.
	- The web interfaces did not always quote < and & in
	  things like the job title.  This had the potential for
	  browser-based security violations (on the browser's
	  machine); bug report from SuSE.
	- The scheduler now treats unauthenticated usernames as
	  case-insensitive when doing quota and allow/deny
	  processing.
	- The lp command sent the "request ID is ..." message
	  to stderr instead of stdout...
	- The PostScript filter (pstops) now handles EPS files,
	  adding a showpage command to the files as needed.
	- The configure script checked for the <stdlib.h> header
	  file before the JPEG libraries; since the JPEG headers
	  can define HAVE_STDLIB_H, the configure check would
	  cause the JPEG check to fail on some systems.
	- The scheduler now supports localized banner files,
	  using the subdirectory approach, e.g. the "es"
	  subdirectory under /usr/share/cups/banners is used for
	  the Spanish banner files.
	- Updated the scheduler so it knows the correct
	  language abbreviation to use for all supported
	  PPD LanguageVersion values.  The new code also
	  supports country codes as well, so "English-GB"
	  maps to the "en_GB" locale.
	- The cups-lpd mini-daemon did not support
	  anonymous printing (no username specified).
	  While the username is REQUIRED by RFC-1179,
	  MacOS clients do not send the REQUIRED username
	  information when printing via LPD.
	- Added many warning and informational messages
	  to cups-lpd where they were missing.
	- Added Czech message file contributed by SuSE.
	- The cups-lpd mini-daemon now returns a non-zero
	  status if an invalid destination or job ID is
	  provided.
	- The scheduler did not honor the KeepAlive setting in
	  cupsd.conf.
	- Increased the size of the file read/write buffers to
	  32k.
	- *BSD static library creation fixes.
	- Use mkstemps() instead of tmpnam() in pdftops whenever
	  possible.
	- Added httpGetHostByName() function as a wrapper around
	  gethostbyname() - some implementations of this
	  function do not support IP addresses (e.g. MacOS X.)
	- Added casts to all printf's of file lengths, since
	  there is currently no standard way of formatting long
	  long values.
	- The client filename field was not cleared in all
	  instances, resulting in old form data being submitted
	  to CGIs.
	- The httpConnect*() functions now try all available
	  addresses for a host when connecting for the first
	  time.
	- The pstoraster filter would "lose" all drawing
	  commands when the PageSize was set but the printer
	  bitmap was  not reallocated.  This was most noticeable
	  with the output from StarOffice 6 beta and would
	  result in a blank page being output...
	- The IPP backend was sending a PAGE comment even when
	  printing the output from a filter (it should only send
	  page comments when printing files directly...)
	- The pdftops filter didn't properly map glyph names of
	  embedded Asian TrueType fonts.
	- Changed the CUPS startup script to look for a program
	  named "cupsd", not just any program with "cupsd" in
	  the name (this caused the apcupsd UPS monitoring
	  daemon to be stopped/restarted...)
	- The CUPS-Move-Job operation did not change the
	  internal destination name for held jobs, so moved (but
	  held) jobs would still show up as queued on the
	  original destination.
	- The cups-polld program didn't send the
	  requested-attributes attribute in the
	  CUPS-Get-Printers and CUPS-Get-Classes requests, which
	  made it use more CPU and bandwidth than required.
	- The scheduler and CUPS API incorrectly added a
	  job-sheets-default attribute for remote printers. This
	  caused banner pages to be omitted from client system
	  prints.


CHANGES IN CUPS V1.1.10-1

	- Minor fixes to the filter, systemv, and template
	  makefiles to install files properly.


CHANGES IN CUPS V1.1.10

	- Added a driver for DYMO label printers.
	- Added new ClassifyOverride directive to allow users
	  to override the classification of individual jobs.
	- Added new BrowseProtocols directive to control which
	  browse protocols are used (currently CUPS and SLP).
	- Added SLPv2 support (thanks to Matt Peterson for
	  contributing the initial implementation for CUPS.)
	- Adding a raw printer on a remote CUPS server now
	  correctly redirects PPD file requests to the remote
	  server.
	- The serial backend now limits writes to 1/10th
	  second worth of data to avoid buffer overflows
	  with some types of flow control.
	- The scheduler did not properly process PUT requests,
	  so configuration files could not be uploaded to the
	  server.
	- The scheduler did not strip trailing whitespace on
	  lines in the configuration files.
	- The httpWrite() function did not transition the PUT
	  request to the HTTP_STATUS state to get the status
	  from the server.
	- The scheduler did not properly handle trailing null
	  ("-") filters when testing a driver that sent data
	  to the file: pseudo-backend.
	- The IPP backend now only sends a document-format of
	  "application/vnd.cups-raw" when printing to another
	  CUPS server using a local printer driver or interface
	  script.  Previously the job's document format was
	  used, which was incorrect.
	- The lpadmin command didn't use the ppd-name attribute
	  with the -m option; this prevented the use of the
	  "raw" model from the command-line.
	- The pstoraster filter output draft (1-bit) 6-color
	  output in the wrong order; this resulted in yellow
	  being printed instead of black on Stylus Photo
	  printers.
	- The pdftops filter did not have the Japanese and
	  Chinese text support compiled into it.
	- The IPP and AppSocket backends did not clear the
	  "waiting for print job to complete" status message,
	  which caused some confusion... :)
	- The serial backend now opens the port in "no delay"
	  mode to avoid DCD detection problems with some OS's.


CHANGES IN CUPS V1.1.9-1

	- The configure script did not substitute the
	  correct user and group names.
	- The configure script did not use the full path
	  to the install-sh script when it was used.
	- The pstoraster filter did not correctly support
	  DuplexTumble mode for printers that used flip
	  duplexing.
	- The cups.list.in file was missing from the
	  distribution.
	- The New DeskJet series driver did not use the
	  correct OrderDependency for the Duplex option.
	- Use read() instead of fread() to read piped
	  print files in lpr/lp.  This avoids a bug in the
	  HP-UX 10.20 fread() function.
	- Updated the pstoraster filter to use the MIPS_FIXADE
	  system call under IRIX to fix bus error problems on
	  R12000 processors (Ghostscript is not 64-bit clean...)
	- Some Xerox PPD files (most notably the Phaser 790)
	  have illegal whitespace in the option keyword in the
	  OpenUI line.  This caused the PageRegion option to not
	  be recognized properly for the Phaser 790.


CHANGES IN CUPS V1.1.9

	- Revamped the configure script to use a modular
	  approach for the various tests.
	- Added --with-openssl-* options to properly reference
	  the OpenSSL libraries in DSOs.
	- Added --with-cups-user and --with-cups-group
	  options to specify the default user and group for
	  CUPS.
	- Added AIX shared library support.
	- Added AIX device discovery for the serial and
	  parallel ports.
	- Now use install program or script to install
	  directories, files, and symlinks.
	- Updated pstops filter to use strict handling of EPS
	  files embedded in a PostScript document.  The %%EOF
	  handling in 1.1.8 caused some dvips files not to
	  print.
	- Fixed yet another memory allocation bug in pstoraster
	  that would cause it to crash.  This fix also ensures
	  that all memory allocations are done on (at least) a
	  64-bit boundary.
	- Fixed Digest authentication - httpGetSubField() didn't
	  skip the Digest keyword.
	- The scheduler did not properly handle Digest
	  authentication with the new multiple-group support.
	- The scheduler did not allow usernames that were
	  not in the UNIX password file to be used for Digest
	  authentication from passwd.md5.
	- The scheduler could not scan PPD files that only used
	  a carriage return (i.e. MacOS PPD files); the new code
	  is also about 40% faster, so servers with thousands of
	  PPD files should start much faster now.
	- The scheduler now stores the PPD file size and
	  modification times in the ppds.dat file, so it can now
	  incrementally update the PPD database from the model
	  directory, resulting in significantly faster startup
	  times.
	- The lpinfo command did not return a non-zero status
	  code if an error occurred.
	- Fixed a bug in the scheduler's UpdateJob() function.
	  Basically, all jobs shared the same status buffer, and
	  the "buffer start" pointer could point to 1 byte
	  before the beginning of the buffer.  The new
	  implementation uses a separate buffer for each job and
	  eliminates the buffer start bug.
	- The IPP backend would send N copies of a document if
	  the receiving device didn't support the copies
	  attribute, even if the upstream driver already added
	  the necessary commands to generate the copies.  This
	  was most noticeable with HP printers where N * N
	  copies would come out instead of N.
	- The PostScript filter (pstops) did not properly handle
	  duplex printing on inkjet printers that provide this
	  option.  Copies would be put on the front and back
	  sides of the duplexed page, and the filter did not
	  output an even number of pages.
	- The backends always caught SIGTERM after they
	  connected to the printer.  This prevented raw jobs
	  from being cancelled early.
	- The cupsSetDests() function now removes any printers,
	  instances, and options that are not defined by the
	  user or server.  This should prevent old system-wide
	  options from being used in individual user accounts.
	- Updated the EPSON printer driver and added PPDs for
	  the newer EPSON Stylus printers that only support the
	  "ESC i" graphics command.
	- The lpadmin command didn't allow you to add remote
	  printers to a local class.
	- The lpadmin command didn't allow you to set the
	  options (quotas, etc.) for a class.
	- The scheduler did not load or save the
	  job-sheets-default attribute for classes.
	- The scheduler did not automatically recreate remote
	  printers that were part of a class.
	- It was possible for a printer class to list the same
	  printer more than once.
	- The scheduler now makes a backup copy of classes.conf
	  and printers.conf before writing the new file.
	- The lppasswd program incorrectly asked for a new
	  password when deleting an existing MD5 password
	  account.
	- The scheduler did not match "/printers/name.ppd"
	  against a location of "/printers/name".
	- The client code did not always handle HTTP encryption
	  upgrades properly.
	- The client code now caches the last Digest password so
	  it can retry using a new resource path or nonce value,
	  which are included in the MD5 sum sent to the server. 
	  This should eliminate unnecessary password prompts
	  when using Digest authentication.
	- The lppasswd command didn't have a man page.
	- Updated the PJL detection rules to allow the universal
	  escape to occur anywhere in the first 128 bytes of the
	  file.
	- The cups-polld program would poll servers continuously
	  with no delay if there was an error contacting the
	  server.
	- The IPP backend would send an empty job-name or
	  requesting-user-name attribute if the corresponding
	  job attribute was an empty string.  While this is
	  allowed by the IPP specification, some HP JetDirect
	  implementations return a client-error-bad-request
	  error if an empty name attribute value is received.
	  The new code only sends these attributes if they are
	  not the empty string.
	- At least some versions of the HP JetDirect firmware
	  do not correctly implement IPP.  Added additional
	  checks to the IPP backend to eliminate extra,
	  unsupported attributes which should normally be
	  ignored by a compliant IPP device.
	- The scheduler did not copy the complete list of
	  supported file types into the
	  document-format-supported attribute. This caused
	  clients to not send the local file type (such as
	  application/vnd.cups-raw for raw print files) and the
	  corresponding bad output in some cases.
	- The scheduler did not fully copy attributes from a
	  set-job-attributes request - string attributes were
	  only referenced, which could cause cupsd to crash
	  or behave irratically.
	- The lp command didn't send the right value for the
	  job-hold-until attribute when "-H resume" was
	  specified.
	- The IPP backend now returns as soon as a job is
	  completed or reported as "pending-held".
	- Added new ImplicitAnyClasses and HideImplicitMembers
	  directives to the cupsd.conf file to make implicit
	  classes more usable/transparent to the user.
	- Clients can now (with the appropriate authentication)
	  retrieve and update the server configuration files
	  using HTTP GET and PUT requests.
	- The web interface didn't allow you to modify the
	  location or description of the printer.
	- The pdftops filter now uses its own temporary file
	  function to work with PDF files using LZW compression
	  (which use the uncompress program or gunzip)
	- The SystemGroup directive now supports specification of
	  multiple groups.
	- Added new Include directive to cupsd.conf, a la
	  Apache.
	- Added new pseudo-driver/PPD called "raw" that can be
	  used to create/convert a raw queue.  This also allows
	  raw queues to be created in the web interface.
	- The pdftops filter didn't handle image objects that
	  used JPEG and Flate compression together.
	- The pstops filter counted pages wrong when using the
	  N-up and even/odd printing options.  This prevented
	  the page-ranges option from working properly.
	- Added another fix to pstoraster for a bus error
	  condition caused by a lack of parenthesis in the
	  Ghostscript code.
	- Added new "natural-scaling" option which scales the
	  natural size of the image (percent of natural image
	  size instead of percent of page size.)
	- The lppasswd program is now setuid to the CUPS user
	  instead of root.
	- The PPD functions did not allow for PPD files that
	  defined the page sizes and margins before the page
	  size options.
	- The mime.types file now checks for the PJL "LANGUAGE =
	  Postscript" command for PostScript files.
	- The scheduler did not truncate file: output files.
	- The PPD file reading code did not handle options with
	  raw quotes (") in the human-readable names.
	- The pdftops filter now remaps the space character when
	  (bad) PDF files contain a .notdef glyph for the space
	  character.


CHANGES IN CUPS V1.1.8

	- Updated spec file to generate separate cups-pstoraster
	  package for pstoraster.
	- The spec file wasn't setting LOGDIR in the install.
	- The scheduler might restart a stopped printer after
	  stopping a print job. Thanks to Florent
	  Guiliani for finding this bug!
	- The init script showed run level 0 for the Red Hat
	  chkconfig program.  This is incorrect because Red Hat
	  doesn't use run level 0 for shutdown scripts.
	- The IPP backend did not handle the
	  client-error-not-found error when checking the status
	  of the job that was sent.  This caused remote queues
	  to stop on client machines when the server had job
	  history disabled.
	- Added httpConnectEncrypt() function to avoid
	  performance penalty for setting up encrypted
	  connections initially.
	- Use httpConnectEncrypt() in all client apps and in the
	  CUPS API to ensure consistent usage of encryption
	  throughout.
	- Jobs weren't queued to remote classes (fix from
	  Richard Begg.)
	- AIX changes from Richard Begg.
	- Fixed the pstops fix for GNOME output - no longer use
	  the page numbers in the %%Page: comment since GNOME
	  puts a filename instead (!?@!#?!).  There is still an
	  issue with N-up printing since GNOME defines its fonts
	  in the first page instead of the document setup section
	  (pages must be independent according to the DSC spec)
	  People with GNOME printing problems should consult bug
	  #54489...
	- The imagetops filter produced PAGE: messages when
	  generating PostScript for a non-PostScript printer
	  (only affects page-label and Classification
	   options.)
	- The updated pdftops filter was looking for an options
	  file called xpdf.conf instead of pdftops.conf.


CHANGES IN CUPS V1.1.7

	- Configuration script changes, including new
	  "--with-docdir=/dir" option to relocate CUPS
	  documentation and web content according to your
	  favorite version of the FHS.
	- Documentation updates for encryption, SLP, etc.
	- New Software Test Plan and automated test script to
	  test CUPS prior to installation.
	- All scheduler configuration files are now case
	  insensitive to match Apache.
	- Added support for Apache ListenBackLog, LogFormat,
	  Require, UseCanonicalName, Satisfy, <Limit>,
	  <LimitExcept>, LimitRequestSize, and Options
	  directives.
	- Added support for all Apache log levels...
	- Added support for "double" HostNameLookups.
	- Added new "RunAsUser" directive to support non-root
	  configurations on the standard (priviledged) ports.
	- Added support for non-root invocation of the lpd
	  backend (does no reserve a priviledged port, which
	  might not work with some LPD servers...)
	- Added new PrintcapFormat directive to control the
	  output format of the printcap file (BSD or Solaris
	  formats are supported at present.)
	- The CUPS directory service routines now handle
	  ECONNREFUSED errors gracefully rather than shutting
	  all browsing off.
	- ippErrorString() now returns the recommended error
	  messages from the IPP/1.1 Model and Semantics
	  document.
	- Fixed a minor IPP compliance issue with responses
	  to requests without the attributes-charset or
	  attributes-natural-language attributes.
	- Sun fix: need httpFlush() call for chunked IPP
	  requests in cupsDoFileRequest().
	- httpConnect() now looks up "localhost" by name and
	  by address (127.0.0.1) for users the go to the
	  trouble of removing the required localhost entry
	  in /etc/hosts or on their DNS server...
	- Added support for Linux 2.4.x devfs parallel port
	  filenames (/dev/parallel/N).
	- cupsDo[File]Request() and cupsGetPPD() no longer
	  block trying to reconnect to a crashed or inaccessable
	  server.
	- Added new ppdEmitJCL() function to better handle
	  PJL commands from PPD files.
	- A bug in UpdateJob() would cause the scheduler to
	  consume 100% CPU until another request was submitted.
	- The cancel command did not support the "-" option to
	  cancel all jobs on all printers.
	- The cancel and lprm commands did not support cancelling
	  the next/current job in the queue.
	- The pdftops and pstoraster filters were using unsafe
	  temporary file functions; while this is not a problem
	  in normal configurations (the CUPS temporary directory
	  is restricted), they now use the cupsTempFd() function.
	- The mime.types file was missing the recognition rule
	  for Sun Raster images.
	- The admin CGI was passing a printer make string to
	  ippSetCGIVars() that was being replaced in that
	  function.
	- "lpoptions -l" would resave the options...
	- The EPSON drivers now send the "end packet mode"
	  command when printing to USB devices.
	- The scheduler initialized certificates before loading
	  the cupsd.conf file.
	- The scheduler used /dev/random to collect random data,
	  which could block if insufficient entropy information
	  had been collected by the kernel.  Now use
	  /dev/urandom.
	- Fixed a bug in the whitespace skipping code in
	  httpGetSubField().
	- The LPD backend now supports a new "order" option:
	  "lpd://server/queue?order=control,data" (default) and
	  "lpd://server/queue?order=data,control".
	- The scheduler enforced a 30 second timeout on all
	  clients regardless of the Timeout directive and if a
	  CGI was currently running.
	- cupsParseOptions() now sets boolean options to
	  option=true or option=false.
	- The "percent complete" calculations in the LPD backend
	  could overflow on large files, causing the percentage
	  to wrap to 0 every 40MB or so.
	- Fixed a memory reallocation bug in pstoraster that
	  could cause it to crash.
	- The LPD backend now sanitizes the job title to avoid
	  potential problems on remote LPD servers.
	- The lp command did not send the requesting-user-name
	  attribute when altering a job.
	- The pstops filter did not handle PostScript files with
	  lines longer than 8191 bytes.
	- The scheduler no longer uses inet_addr() to convert IP
	  addresses in dot format (mmm.nnn.ooo.ppp) to the
	  32-bit format, since it will not work for IPv6
	  addresses.
	- New "Classification" directive to force labeling of
	  the current classification on each page.
	- New "page-label" attribute to add per-page labels
	  ("For Official Use Only", "Draft", etc.)
	- The scheduler now sets the HTTPS environment variable
	  for CGI programs when a client connects using
	  encryption.
	- Fixed a recursion bug in the scheduler that could
	  cause cupsd to crash when a printer was removed.
	- The LPDEST and PRINTER environment variables didn't
	  support instances.
	- Dropped the "file" backend from the device list that
	  is reported, since it is only available for *testing*
	  and should never be used in a production environment.
	  The file: device can still be used, but it won't show
	  up in the list of devices from lpinfo or the web
	  interface.
	- Added support for /dev/lpa# parallel ports under *BSD.
	- Added META variables to the CGI header template to
	  prevent caching of the results.
	- Fixed an unaligned memory buffer for the pstoraster
	  clist states; this caused bus errors for some
	  combinations of printers, drivers, and options.
	- Re-added black reduction for colorful colors; this
	  helps to prevent dark colors from getting desaturated.
	  (only used when converting RGB to CMYK)
	- Added two new directives - MaxJobsPerPrinter and
	  MaxJobsPerUser - to allow an administrator to set
	  the maximum number of pending jobs in a queue or
	  submitted by a user.
	- The scheduler no longer stops a printer if it can't
	  create the status pipe or run the filters or backend.
	  This will allow heavily loaded servers to service
	  clients or start print jobs as the load allows.
	- Fixed a bug in the Set-Job-Attributes code that could
	  crash the scheduler (patch from Martin Zielinski)
	- cupsSetDests() did not quote option values with
	  embedded spaces.
	- Added support for the Enable-Printer and
	  Disable-Printer extension operations (same as
	  CUPS-Accept-Jobs and CUPS-Reject-Jobs.)
	- The AppSocket and IPP backends now wait for the print
	  job to be finished before exiting; this should prevent
	  the loss of print jobs with older JetDirect firmware
	  and make consecutive print jobs print faster.
	- The BMP loading code did not handle resolution values
	  of 0.  This is a problem with BMP image files produced
	  by the GIMP.
	- The HTTP Upgrade code (upgrade to TLS encryption)
	  bypassed the authentication checks.
	- The HTTP Upgrade code did not send a 426 status code
	  to the client and end the current request. This caused
	  a race condition between the client and server for the
	  upgrade to TLS.
	- Fixed a bug in the EOF and Trailer detection code in
	  the pstops filter.
	- The imagetoraster filter did not add the margins to
	  the custom page size in the raster header.
	- The imagetops filter did not adjust the custom page
	  size to the size of the printed image.
	- The imagetops filter did not include DSC comments
	  which are required by some printers.
	- The imagetops filter did not insert newlines in
	  Base85 encoded output, causing files to contain
	  lines longer than 255 characters (violation of the
	  DSC).
	- Added support for the DeskJet 900 series duplexer
	  and CRET color modes in the HP driver.
	- Added support for PPD-defined margins in the HP
	  driver.
	- Fixed the debugging output from pstoraster - the
	  font list was not terminated by a newline.
	- Some versions of the HP-UX pam_unix authentication
	  module apparently do not pass the appdata_ptr argument
	  to the conversation function, preventing the scheduler
	  from authenticating users using PAM under HP-UX.  A
	  workaround using a static variable has been added to
	  address this problem.
	- Fixed a bug in the scheduler SortPrinters() function
	  that could cause printers to disappear or the
	  scheduler to crash when adding a printer.
	- Changed the pstops filter to not do per-page filtering
	  if the file does not conform to at least version 3.0
	  of the document structuring conventions.  This seems
	  to "fix" printing with broken apps.
	- The image filters did not handle older TIFF files that
	  lacked the samples-per-pixel and bits-per-pixel tags.
	- Added new cupsGetJobs() and cupsFreeJobs() functions
	  to manage print jobs.
	- cupsEncodeOptions() would encode names of 0 length and
	  cupsAddOption() and cupsParseOptions() would add names
	  of 0 length.
	- The scheduler might block waiting for status messages
	  after starting a new print job. Thanks to Florent
	  Guiliani for finding this bug!


CHANGES IN CUPS V1.1.6-3

	- The configure script put the JPEG library before the
	  TIFF library; this caused problems in some
	  configurations since the TIFF library also supports
	  JPEG compression of TIFF images.
	- Updated the configure script and makefiles to handle
	  admin man pages with the "1m" extension (HP-UX, IRIX,
	  Solaris, Tru64) and in odd directories (IRIX)
	- The updated cupsTempFile() function did not return
	  the filename when called with a filename buffer of
	  NULL (previously it used a static buffer.)
	- FreeBSD uses /dev/unlptN, but NetBSD and OpenBSD use
	  /dev/ulptN.
	- DeletePrinter() didn't remove the printer from any
	  classes it was a member of.
	- DeletePrinterFromClass() didn't preserve the
	  implicit status of a class.
	- DeletePrinterFromClasses() didn't remove printers
	  from implicit classes.
	- StartJob() didn't send the job-sheets, job-priority,
	  and job-hold-until attributes to remote printers.
	- LoadAllJobs() was looking for job-sheets-completed
	  instead of job-media-sheets-completed.  This would
	  prevent accumulation of page data after a restart
	  of the scheduler.
	- The pstops and imagetops filters now generate copies
	  using the appropriate method for a Level 1, 2, or 3
	  printer since some Level 2/3 printers don't support
	  the /#copies variable anymore.
	- The man page for cups-lpd did not mention the "-o"
	  option.
	- The IPP backend didn't handle version-not-supported
	  errors and revert to IPP/1.0 (previously it only checked
	  for a bad-request error)
	- Caldera fix: lpc now reports unimplemented commands as
	  unimplemented, not invalid.
	- Caldera fix: lpq didn't recognize BSD lpq "-a" option.
	- Caldera fix: lpr didn't recognize BSD lpr "-1", "-2",
	  "-3", "-4", "-q", or "-U" options.
	- RedHat fixes: patches to GNU Ghostscript
	- SuSE fix: temp file creation patch to GNU Ghostscript
	  (pstoraster).
	- SuSE fix: remove cgi-bin/abort.c and cgi-bin/email.c,
	  which are not used.
	- SuSE fix: missing NULL check in cgi_initialize_post().
	- SuSE fix: potential buffer overflows in
	  cgi_initialize_string().
	- SuSE fix: potential buffer overflows in
	  ippSetCGIVars()
	- SuSE fix: more NULL checks in ppdOpen(); also make
	  sure that all memory is freed on error to avoid memory
	  leaks.
	- SuSE fix: Exit from child if setgid() or setuid()
	  fails.
	- SuSE fix: Added setgroups() calls after setgid() and
	  setuid() calls.
	- SuSE fix: potential buffer overflows in httpEncode64()
	  calls.
	- SuSE fix: potential buffer overflows in httpSeparate()
	- SuSE fix: potential buffer overflows in ippWrite() for
	  bad input.
	- SuSE fix: potential nul skip in ppd_decode() for
	  missing hex digits.


CHANGES IN CUPS V1.1.6-2

	- Added changes to support NetBSD startup scripts.
	- Added separate compiler options for pstoraster
	  (Ghostscript) to avoid compiler-induced errors
	  from Ghostscript's twisted code.
	- The mime.types file contained syntax errors.
	- Updated the *BSD USB device filenames to use
	  the /dev/unlptN files so that the USB device
	  is not reset prior to printing (causes print
	  corruption on many printers)
	- Added new cupsTempFd() function to avoid serious
	  security bug in glibc fopen() function.  The glibc
	  fopen() function unlinks a file before creating it,
	  which opens up possible symlink attacks.
	- Now reject 0-length names in add-printer and add-class
	  requests.
	- Fix for pstoraster when ZLIB is not available.
	- cupsGetPPD() didn't reconnect when a HTTP connection
	  was lost.
	- SuSE fix: httpConnect() didn't check that the
	  value from gethostbyname() was a valid IPv4 address.
	- SuSE fix: httpConnect() didn't allow file descriptor 0
	  to be used for a socket.
	- SuSE fix: ippRead() didn't confirm that all values in
	  a set were numeric or string types.
	- SuSE fix: lppasswd race condition fixes.
	- SuSE fix: directive names could overflow buffer when
	  reading *.conf files.
	- SuSE fix: HEAD requests for PPD files did not use the
	  same logic as GET requests.
	- SuSE fix: possible buffer overflow when adding
	  /index.html to requested directory name.
	- SuSE fix: possible buffer overflow when converting
	  IPP attributes to string options for filters.
	- SuSE fix: creating file: device output with mode 0666
	  instead of mode 0600.
	- SuSE fix: creating job info files with mode 0640
	  instead of 0600.
	- SuSE fix: don't rely on snprintf() for including
	  system name in log filenames.
	- SuSE fix: add bounds checking when copying quoted
	  and hex strings.


CHANGES IN CUPS V1.1.6-1

	- Added configure check for getting the correct
	  strftime() format string; %c is not Y2k safe,
	  and %KC and NULL are not universally supported.


CHANGES IN CUPS V1.1.6

	- Fixed another possible DoS attack in httpGets()
	- Added check for "LANGUAGE = PCL" and "LANGUAGE =
	  POSTSCRIPT" in mime.types.
	- Resolution options were not being passed into the
	  filter programs properly.
	- The default compiler options for GCC no longer include
	  "-g3", which apparently is deprecated in newer
	  versions of GCC.
	- CheckJobs() could cause cupsd to crash if a job is
	  cancelled in StartJob().
	- The printers.conf and classes.conf files are now
	  written with restricted permissions.
	- The round-robin algorithm used by FindAvailablePrinter()
	  had problems; fixes contributed by Joel Fredrikson.
	- If LoadAllJobs() is unable to determine the file type
	  of a print job, assume "application/vnd.cups-raw".
	- The web interface now provides a job_printer_name
	  value for any corresponding job_printer_uri value.
	- The cups-lpd mini-daemon now logs the client address
	  and hostname as well as all commands and errors in the
	  syslog file.
	- The IPP backend now detects the supported file formats
	  and only specifies the document format if it is
	  supported.  This makes IPP printing to network print
	  servers and cards more reliable without affecting the
	  capabilities of CUPS servers.
	- The time_at_xyz attributes are now converted to human-
	  readable dates and times for the web interfaces.
	- The HP and EPSON sample drivers now correctly catch
	  signals and eject the current page when a job is
	  cancelled.
	- Fixed bug in CGI code - did not ignore control
	  characters (e.g. newlines) in form data.  This caused
	  sporatic web interface problems.
	- The file type logging code in the scheduler referenced
	  the optional document-format attribute; the new code
	  uses the resolved MIME type instead.
	- The client.conf parsing code now removes trailing
	  whitespace.
	- The MaxJobs directive was being treated as a boolean
	  instead of an integer.
	- The scheduler would not timeout remote printers if
	  BrowseInterval was set to 0.
	- The lpadmin command now supports setting of options
	  and user-level access control.
	- Added "-E" option to all printing commands to force
	  encryption.
	- The client code did not consume the response to the
	  OPTIONS request when switching to secure mode.
	- The scheduler did not output a Content-Length field
	  when responding to an OPTIONS request.
	- Added documentation on using cups-lpd with xinetd
	  to the man page.
	- The socket backend now starts retries at 5 seconds and
	  increases the interval to 30 seconds.  This should
	  provide faster printing when multiple jobs/files are
	  queued for a printer.
	- The filters and backends no longer buffer output to
	  stderr.  This should provide much more accurate status
	  reporting.


CHANGES IN CUPS V1.1.5-2

	- Fixed configure check for OpenSSL to work with RSA
	  code.
	- Added configure check for <sys/ioctl.h>, and use this
	  check in backend/serial.c.
	- Updated configure script handling of data,
	  configuration, and state directories to use datadir,
	  sysconfdir, and localstatedir variables.
	- NetBSD uses different serial port filenames than
	  FreeBSD and OpenBSD.
	- The pdftops filter didn't need some X-specific files.
	- The scheduler makefile doesn't do a chown anymore when
	  installing (cupsd did this automatically on startup
	  anyways)


CHANGES IN CUPS V1.1.5-1

	- There was a typo in the top-level Makefile
	- The top-level Makefile did not install an init script
	  for run level 5. 
	- The configure script did not add the "crypto" library
	  when checking for the OpenSSL library. 
	- The OKIDATA PPD files were missing. 
	- The config.h.in file defined the wrong version number. 
	- The serial backend did not define "funky_hex" under *BSD. 
	- Updated the Visual C++ project files and some of the
	  CUPS API sources to compile under Windows again. 


CHANGES IN CUPS V1.1.5

	- Security updates - new default configuration does
	  not broadcast printer information and only allows
	  access from the local system.
	- EXPERIMENTAL encryption support - CUPS now optionally
	  supports TLS/SSL encryption via the OpenSSL library.
	- Documentation updates.
	- Makefile/configure script updates.
	- The RPM spec file didn't work out-of-the-box under
	  RedHat or Mandrake.
	- Minor code cleanup to remove extraneous compiler
	  warnings.
	- cupsTempFile() was using %p for the temporary
	  filename; this should have been %08x (just 8 digit
	  hex)
	- Deleting a printer with active print jobs would still
	  crash the server.
	- ippWrite() and ipp_write_file() didn't send the
	  correct value length for name-with-language and
	  text-with-language attributes.
	- Updated IPP code to support copied strings (that
	  should not be freed); this provides slightly more
	  efficient IPP server performance.
	- Updated PDF filter to Xpdf 0.91.
	- httpGets() could go into an infinite loop if a line
	  longer than the input buffer size was sent by a
	  client. This could be used in a Denial-of-Service
	  attack.
	- The lpstat and CUPS API functions now request only the
	  data required when getting the list of printer or
	  class information.  This should improve performance
	  with large numbers of printers on slower machines.
	- The scheduler was always enforcing the FilterLimit,
	  even if FilterLimit was set to 0.
	- Updated the Linux USB backend to support Mandrake's
	  /dev/usb/usblp# filenames.
	- The PRINTER and LPDEST environment variables did not
	  override the lpoptions default printer.
	- The PPD read functions incorrectly included trailing
	  characters (usually whitespace) after quoted string
	  attributes.
	- The multiple-document-handling attribute handling code
	  did not check for the correct value for collated
	  copies (separate-documents-uncollated-copies).
	- The EPSON driver did not work with OKIDATA printers in
	  EPSON emulation mode (needed change-emulation command)
	- The HP-GL/2 filter did not scale the plot properly in
	  scale mode 2.
	- Added PPD files for 9-pin and 24-pin OKIDATA printers.
	- The httpSeparate() function didn't handle passwords
	  that started with a number.
	- ippDelete() could free the character set string
	  multiple times in name-with-language and
	  text-with-language attributes.
	- The scheduler would access freed memory right after
	  freeing it (for debug messages); these parts of the
	  code have been reordered to avoid this situation
	  which was causing sporatic errors and crashes.
	- The ppdClose() function didn't free all of the strings
	  in the ppd_file_t structure.
	- The LoadAllJobs() function in the scheduler did not
	  close the spool directory.
	- Changed all sprintf's that use string formats to
	  snprintf's, even if the destination buffer is
	  larger than the source string(s); this protects
	  against buffer overflows caused outside of CUPS...
	- Changed all strcpy's to strncpy's between local and
	  global variables, even if the destination buffer is
	  larger than the source string; this protects
	  against buffer overflows caused outside of CUPS...
	- The CUPS certificate functions didn't use the
	  CUPS_SERVERROOT environment variable when set.
	- The directory services code was copying instead of
	  comparing the remote printer info, resulting in
	  unnecessary updates of the printer attributes for
	  remote printers.
	- Added new mime.types rules to allow automatic raw
	  printing of PCL and ESC/P files; PJL headers are
	  parsed to differentiate between PostScript and
	  PCL job files.  This should eliminate a lot of
	  the reports of SAMBA printing problems due to
	  the missing "-oraw" or "-l" options.
	- The mimeLoadType() function didn't handle the
          3-argument contains() function.
	- The LoadPPDs() function in the scheduler didn't
	  properly set the alloc_ppds variable or handle a PPD
	  database containing 0 printers.
	- The scheduler FindAvailablePrinter() function didn't
	  use the same queuing logic as the CheckJobs()
	  function.  This caused classes to stall if a remote
	  printer was always busy.
	- Jobs are now assigned to printers in a class
	  round-robin style.  This should prevent the first
	  server in the class from bearing the brunt of the
	  jobs.
	- The scheduler's LoadAllJobs() function didn't always
	  restore remote printers for queued jobs on startup.
	- The serial backend didn't support the higher baud
	  rates with the old termios interface. It now supports
	  57600 and 115200 baud.
	- The serial backend now supports different types of
	  flow control; previously it ignored the flow=XYZ
	  option in the device URI.
	- The serial backend now supports DTR/DSR flow control,
	  which is popular on dot-matrix printers (access with
	  "flow=dtrdsr" in the device URI)
	- Added new job-originating-host-name attribute for
	  jobs.  The new attribute provides the hostname or
	  IP address of the machine that submitted the job.
	- The set-job-attributes code no longer allows read-only
	  job attributes to be changed.
	- Expanded the click area for the navigation bar in the
	  web interface.
	- Updated the lp and cancel commands to support all of
	  the Solaris print options (some are simply ignored
	  since they do not map)
	- Updated the scheduler to limit the number of file
	  descriptors to the maximum select() set size.  This
          was causing problems on Solaris systems where the
          max FD count was increased beyond 1024.
	- The scheduler's LoadDevices() function was getting
	  interrupted by the SIGCHLD signal handler; now ignore
	  child signals while loading devices.
	- Added quota and allow/deny user support for printers
	  and classes.
	- Removed black/CMY adjustment code from the PS and
	  image file RIPs; it was interfering with some CUPS
	  driver dithering code.
	- The lpc program stopped listing the queue statuses
	  after the first active printer.
	- The cups-lpd program used an output format that the
	  Solaris printing system did not understand.
        - Updated the lpq program to use the Solaris format
	  except under Tru64 UNIX.
	- Some DEC PPD files incorrectly use "Off" for the null
	  value in UI constraints. Added "Off" to the list of
	  accepted null values.
	- Changed the *BSD define constants to __*BSD__ in all
	  of the backends.
	- Added support for "lpstat printername", which is an
	  undocumented feature in Solaris.
	- The HP-GL/2 filter now only sets the plot size if it
	  is set in the plot file.
	- The lpmove command wasn't sending the requesting
	  user name, causing it to always fail.
	- Updated the cupsTempFile() code to use GetTempPath()
	  under Windows.
	- The cups-lpd mini-daemon didn't limit the number of
	  data files accepted, didn't use cupsTempFile(),
	  didn't handle control file job information in any
	  order, and didn't free job options after printing
	  a file.
	- The scheduler copy_banner() function did not
	  explicitly set the owner and permissions of the banner
	  files, which could prevent the banner pages from
	  printing on some systems.
	- The lpstat program wasn't listing remote classes.
	- The scheduler did not verify that the printer-uri
	  attribute was specified in all requests that required
	  it.


CHANGES IN CUPS v1.1.4

	- Makefile and configure script fixes.
	- **** Changed the default Printcap setting **** to
	  /etc/printcap. There are just too many people asking
	  why application XYZ doesn't see their printers!
	- The web admin interface now displays an error if it
	  can't get the list of printer drivers from cupsd.
	- The IPP backend was putting the copies option before
	  the other job options were set. This caused the IPP
	  request to contain attribute groups in the wrong
	  order, which prevented remote printing.
	- Added checks in scheduler to free memory used for
	  IPP requests and language information when closing
	  a client connection.
	- Fixed the duplex option in the HP LaserJet driver.  It
	  should now work with all LaserJet printers (and
	  compatibles)
	- The add-printer web interface didn't initialize the
	  "old info" data pointer, which caused random crashes
	  on many OS's.
	- Fixed many page sizes defined in the Level 1
	  compatibility file "gs_statd.ps" to match reality.
	- Fixed another bug in the setpagedevice "code" in
	  Ghostscript.  It should now accept all standard
	  Adobe attributes on all platforms.
	- Fixed pstoraster so that it reallocates memory for
	  color depth changes as well as size/resolution
	  changes.  This removes an ordering constraint on
	  the color, page size, and resolution options in
	  PPD files.
	- The IPP backend didn't use the job's character set
	  when the destination printer supported it.  This
	  caused problems when printing text files to other
	  CUPS servers.
	- Updated the logic used to determine when to rebuild
	  the PPD file database.  The scheduler now checks the
	  dates and the number of PPD files (was just checking
	  the dates.)
	- Updated the ippSetCGIVars() function (used by the
	  web interfaces) to only filter valid string values.
	- The PostScript filter was scaling 2-up pages
	  incorrectly.  This caused the edges of some pages to
	  be clipped.


CHANGES IN CUPS v1.1.3

	- Makefile fixes.
	- RPM spec file changes.
	- Documentation updates.
	- Enabled pstoraster debug messages for everything
	  (only logged when LogLevel set to "debug"...)
	- Changed the Input/OutputAttributes fix in
	  pstoraster so that it works on all platforms.
	- The HP-GL/2 filter didn't set the right green
	  color value in encoded polylines or text.
	- Updated the "fitplot" code to handle plot sizes
	  specified as "PSwidth,length" and "PSlength,width".
	- Updated the Linux parallel and USB backends to open
	  the device files prior to looking in /proc for
	  autoprobe info. This makes sure that loadable device
	  driver modules are in fact loaded...
	- Added new FilterLimit directive to limit the number
	  of processing jobs/filters on a system.
	- set-job-attributes didn't change the job-state to
	  held/pending when the job-hold-until attribute was
	  specified.
	- set-job-attributes didn't save the new job attributes.
	- Now change the "requesting-user-name" attribute in
	  requests from remote systems to "remroot" when an
	  unauthenticated "root" user is sent. This can be
	  changed using the new RemoteRoot directive in
	  cupsd.conf.
	- The cancel-job, hold-job, release-job, and restart-job
	  operations didn't log the authenticated username.
	- The cups-lpd mini-daemon now checks for a
	  document-format option before forcing raw mode with
	  filter mode 'l'.
	- The cups-lpd mini-daemon now supports "-o" options
	  on the command-line (passed by inetd) to set global
	  defaults for all print queues.
	- The pstops filter assumed that a file with a Trailer
	  comment would also have an EOF comment.
	- Added new cupsSetPasswordCB(), cupsSetServer(),
	  cupsSetUser(), and ippSetPort() functions to better
	  support client applications (especially GUIs...)
	- The CUPS-add-class and CUPS-add-printer operations
	  didn't reset the printer-name attribute on remote
	  print queues that had to be renamed when a local
	  printer was defined with the same name.
	- The lpoptions command now supports a "-r" option to
	  remove options for a printer or instance.
	- The lpadmin and admin.cgi programs no longer allow
	  class and printer names to begin with a number; this
	  caused the command-line utilities to become confused.
	- The Linux USB backend now looks for both the parallel
	  and usblp driver names in the device list.
	- Added a new FontPath directive to cupsd.conf, and also
	  a "--with-fontpath" option for the configure script to
	  specify alternate font paths for pstoraster.
	- The CUPS-move-job operation didn't update the
	  job-printer-uri attribute.
	- The scheduler only looked up printers and classes by
	  name in IPP requests, instead of using the full URI.
	  This caused problems with KUPS and friends with
	  remote printers.
	- The scheduler now handles better localization of
	  hostnames (e.g. server is host.foo.com, remote is
	  host.subfoo.foo.com, localized is not host.subfoo...)
	- The scheduler logging functions now use a common
	  log file checking/rotation function (courtesy of
	  Crutcher Dunnavant at Red Hat)
	- The scheduler could accept more client connections
	  than it allocated for if more than one Port or Listen
	  line was present in cupsd.conf.
	- Other minor scheduler performance tweeks.
	- The lpq and lprm commands didn't support the default
	  printer set using lpoptions.
	- The lpoptions command now supports a "-l" option to
	  list the printer-specific options and their current
	  settings.
	- The web printer and class lists now show a link to the
	  default printer or class at the top of the page.
	- The text filter now supports pretty printing of shell
	  and perl scripts as well as C/C++ source files.
	- The top and bottom margins were reversed for landscape
	  text printing.
	- The lpq and lprm commands didn't understand printer
	  instances.
	- The scheduler only selected on the first 100 file
	  descriptors instead of the maximum file descriptor
	  limit.
	- The scheduler client, listener, and mainline functions
	  now share code to disable and enable monitoring for
	  new client connections.
	- The imagetoraster filter didn't support all of the
	  required pagedevice parameters.
	- The serial backend now checks for 100 serial ports
	  under Linux.
	- The scheduler used sscanf() to pull out the remote
	  printer location, description, and make/model strings,
	  but if any of these options was empty then sscanf()
	  would stop processing.
	- Added "debug2" log level to provide a little less
	  verbose debugging information at the "debug" level.
	- The scheduler would crash if you stopped a printer
	  that was currently printing a job.
	- The scheduler incorrectly allowed jobs in the cancelled,
	  aborted, or completed state to be cancelled.
	- The image filters did not load TIFF images properly
	  for bottom-to-top and right-to-left orientations.
	- Added new cupsEncodeOptions() function to encode
	  CUPS options as IPP job attributes.
	- The IPP backend, LPD mini-daemon, client commands,
	  and CUPS API did not properly encode multiple
	  option values separated by commas.
	- Added new scheduler malloc logging in debug mode
	  (provides summary of total arena size, allocated,
	   and free bytes once a minute)
	- The EPM-based distributions didn't install the
	  correct symlinks for a few man pages.
	- Fixed a memory leak in the scheduler - wasn't
	  freeing old filters when deleting or renaming
	  printers.
	- The scheduler now queries the primary IP address
	  for the name of the server and maps any incoming
	  requests from that address to the server name.
	  This fixes web admin mapping problems from
	  server.domain.com to localhost.
	- The web printer modify interface now remembers
	  the previous device and driver settings (except
	  for serial ports.)
	- The job-k-octets attribute is now stored as part of
	  the job attributes; this preserves the information
	  after a job is completed when job file history is
	  turned off.
	- Dropped option sub-group parsing code for the moment,
	  since many Xerox PPD files abuse this feature in PPD
	  files and don't follow the hierarchy rules.
	- Added new wrapper code around options so that duplex
	  options for some HP printers don't prevent prints.
	- Added support for Digital UNIX/Tru64 UNIX/OSF/1 format
	  for "lpstat -v" output.
	- Now show the URI for remote printers instead of
	  /dev/null in "lpstat -v" output.
	- Creating classes and adding printers to a class with
	  the lpadmin command didn't work.
	- The banner pages and test page should now format
	  correctly in both portrait and landscape orientations.
	- Updated banner page substitution so that { can appear
	  by itself without quoting.


CHANGES IN CUPS v1.1.2

	- Makefile/configure fixes
	- RPM spec file and EPM list file fixes
	- The cupsTempFile() function now uses a different
	  algorithm for generating temp files and "reserves"
	  them to avoid possible security exploitation.
	- Now use /dev/random (if available) to seed the random
	  number generator for certificates.
	- The /var/spool/cups and /var/spool/cups/tmp directories
	  were incorrectly owned by root; they are now owned by
	  the filter user, typically "lp".
	- The scheduler now resets the permissions on the spool
	  and temp directories as needed to match the filter
	  user.
	- Now expose ppdCollect() as an externally callable
	  function.
	- The image filters now support filtering from the
	  standard input.
	- The imagetoraster filter now collects all printer
	  options and job patch files and applies them to the
	  page header as needed.
	- Added format and banner options to LPD backend.
	- The send-document operation didn't start a job
	  immediately when last-document was true.
	- The set-job-attributes operation didn't correctly
	  replace the current job-hold-until value.
	- Removed the option wrapper code from ppdEmit() and
	  friends since it caused problems with Ghostscript
	  and many PS printers.
	- Was setting TZ environment variable twice for job
	  filters.
	- Added syslog logging in cups-lpd to aide in
	  debugging problems.
	- The HP-UX parallel port backend did not list the
	  available parallel ports on some systems (printf
	  calling problem...)
	- The lp and lpr commands overrode user options if
	  -d/-P were specified after -o.
	- The scheduler would crash with a */* filter.
	- Added support for a "default" filter for unknown file
	  types.  The example provided in the mime.types and
	  mime.convs file prints unknown files as if "-oraw" was
	  specified for the job.  This functionality is disabled
	  by default.
	- The "compatibility" mode fix for older backends did not
	  work for smbspool.  Added a workaround for it.
	- The HP-GL/2 filter didn't perform the right pen scaling
	  with some files and the "fitplot" option.
	- New Software Performance Specification document that
	  describes the memory, disk, and CPU usage of all the
	  CUPS software.


CHANGES IN CUPS v1.1.1

	- The pstoraster Makefile still referenced one of the
	  old PDF filter files.
	- The filter Makefile used INSTALL_DATA instead of
	  INSTALL_LIB to install the CUPS image library.
	- The administration CGI didn't work properly with
	  network devices.
	- The BrowseACL variable was not updated after the
	  cupsd.conf file was loaded.
	- The lpd mini-daemon didn't support printer instances.
	- Now use a default umask of 077 for child processes.
	- Now put temp files in /var/spool/cups/tmp for child
	  processes and the root user, unless TMPDIR or TempDir
	  is defined otherwise.
	- cupsGetPPD() no longer uses easy-to-guess filenames.
	- The CUPS-Delete-Class and CUPS-Delete-Printer
	  operations now save classes.conf file as needed.
	- The lppasswd command wouldn't add a user.
	- The ppdOpen() function could cause a segfault if a
	  0-length PPD file was read.
	- The image filters were not handling images with
	  different X and Y resolutions properly.
	- The imagetoraster filter defaulted to RGB output
	  instead of black output like pstoraster.
	- The pstops filter didn't handle binary data properly.
	- The pstops filter didn't handle copies properly for
	  PS files lacking DSC comments.
	- The pstops filter now appends %%EOF to the end of
	  documents if they don't have it.
	- The cupsGetPPD() function didn't work with remote
	  printers lacking the @server in the name.
	- The configure script didn't work right when only
	  --prefix was specified.
	- The ppdEmit() code now wraps all printer commands so
	  that buggy PostScript printers will still print a file
	  after receiving an option that isn't available.
	- Fixed the DeskJet margin bug, and disabled 600dpi
	  color mode until it can be fixed.
	- The cupsAddDest() function didn't sort instances
	  correctly in all cases.
	- The time-at-xyz attributes now expand to the date and
	  time in banner files.


CHANGES IN CUPS v1.1

	- Documentation updates.
	- Configuration script updates.
	- Didn't map charset and language value strings to lowercase
	  and _ to - as required by SLP and IPP.
	- ppdLoadXYZ() didn't add the list of available fonts to the
	  ppd_file_t structure.
	- The text filter common code was freeing the PPD file data
	  before it was used.
	- The text filter now embeds missing fonts.
	- The CGI interface now maps local access to the server to
	  the localhost address.
	- The HP-GL/2 filter didn't use the specified (or default)
	  color ranges, resulting in strange colors.
	- The HP-GL/2 filter didn't default to no input window, which
	  caused unnecessary clipping of plots.
	- Integrated Xpdf's pdftops filter into CUPS, which is a
	  lightweight and reliable replacement for Ghostscript's
	  PDF support.
	- Removed all PDF support from Ghostscript.
	- Updated HP driver to set top margin; this seems to fix
	  the offset problem seen on HP DeskJet printers.
	- Fixed dependencies on the ZLIB and JPEG libraries in
	  pstoraster.
	- The lpr command wasn't using the lpoptions defined by
	  the user.
	- The lpr command would segfault if the CUPS server was
	  not running.
	- The top-level makefile was not installing the CUPS
	  initialization script.  It now does so if it sees there
	  is an init.d directory in /sbin, /etc/rc.d, or /etc.
	- "lpstat -v all" didn't work.
	- pstoraster would crash on some platforms doing the
	  setpagedevice operator.
	- The web administration interface now allows you to set
	  the default banner pages.
	- Images can now be positioned on the page using the new
	  "position" option.
	- The AccessLog, ErrorLog, and PageLog directives now
	  support "%s" to insert the server name.
	- Added a new BrowseShortNames directive to allow for
	  short remote printer names ("printer" instead of
	  "printer@server") when possible.
	- The scheduler could crash if given an invalid PPD file
	  with no PageSize attributes.
	- Updated the serial, parallel, and usb backends to do
	  multiple writes and ignore ioctl() errors as needed;
	  this should fix problems with serial printing on old
	  serial drivers and with the UltraSPARC parallel port
	  driver under Solaris 2.7.
	- Now propagate LD_LIBRARY_PATH to child processes from
	  cupsd.
	- New DataDir directive for installing in alternate
	  locations.
	- New CUPS_SERVERROOT and CUPS_DATADIR environment
	  variables to specify installation directories as
	  needed.
	- Queued remote jobs recreate remote printers as needed
	  when the scheduler is started.
	- Deleting a printer also purges all jobs on that
	  printer.
	- Old job and control files that don't belong to a
	  printer are automatically deleted.
	- Wasn't updating time-at-processing and
	  time-at-completed attributes in job.
	- Didn't send required multiple-operation-time-out
	  attribute in response to a get-printer-attributes
	  request.
	- cups-lpd now supports options set with lpoptions.
	- The job-hold-until attribute is now provided with all
	  jobs. For jobs that are not currently held the value
	  is "no-hold".
	- The scheduler was not sending "unknown" values in IPP
	  responses.
	- The lpoptions command now accumulates options from
	  previous runs rather than replacing all options for a
	  printer.
	- The IPP backend now switches to IPP/1.0 if a 1.1
	  request fails.
	- The lpadmin and admin.cgi programs now validate new
	  printer and class names.
	- The access_log file now includes the number of IPP bytes
	  received in a POST request.


CHANGES IN CUPS v1.1b5

	- Documentation updates.
	- The pstoraster filter didn't compile without the JPEG library.
	- The cupsd server didn't support the HTTP OPTIONS request
	  method.
	- Dropped the "CLOSE" method supported by the cupsd server.
	  (not defined in HTTP specification)
	- Makefile/configure script fixes.
	- Missing the job-restart template.
	- Added IPP test suite for testing.
	- Missing IPP documentation from binary distributions.
	- Fixed multiple-document handling code when last-document
	  not specified.
	- Added more checks to IPP requests to prevent bad requests
	  from getting through.
	- Not all of the Ghostscript error output was being sent to
	  stderr.
	- The PostScript filter now added PJL commands to set the
	  job name and display string, if supported.
	- The scheduler would crash if the browse socket could not
	  be bound. Now disables browsing if port 631 (reserved for
	  IPP) is being used by a misbehaving daemon.
	- The USB backend now looks for the older Linux 2.2.x USB
	  printer device filenames as well as the newer ones.
	- The IPP backend now uses the UTF-8 charset exclusively,
	  since apparently only CUPS handles more than US-ASCII and
	  UTF-8...
	- Wasn't quoting ( in PostScript banners...
	- Send-document requests with no document-format attribute
	  could cause cupsd to crash.
	- Old jobs in the spool directory might cause cupsd to
	  crash.
	- CUPS now supports all of the recommended job-hold-until
	  keywords as well as name values of the form "HH:MM" and
	  "HH:MM:SS".
	- Added placeholder pointer for TLS encryption to the HTTP
	  connection structure.
	- Fixed the "fast poll" bug reported by DISA - the
	  status pipe wasn't being closed for multi-file jobs.
	- Revamped put_params code in pstoraster to fix bitmap
	  allocation bug with FrameMaker output.
	- Ripped out filename, etc. code from pstoraster as it
	  is a potential security hole.
	- Added support for RIP_CACHE environment variable in the
	  new pstoraster.
	- Fixed USB device filenames for Linux; now support new
	  pre-2.4 devices (/dev/usb/lp#) and 2.2 devices
	  (/dev/usblp#)
	- Fixed accept-jobs crash with classes.
	- Didn't include dot-matrix EPSON drivers in previous
	  release.


CHANGES IN CUPS v1.1b4

	- Documentation updates.
	- Many makefile and configuration script fixes (should
	  now compile better under *BSD.)
	- The MediaPosition attribute was being mishandled by
	  GhostScript, causing the RIP to fail whenever a paper
	  tray was selected.
	- The scheduler now logs the final line of log information
	  from a filter, even if it doesn't end with a newline; this
	  primarily affects GhostScript error output.
	- The scheduler was saving implicit classes, so after a few
	  restarts you'll end up with AnyPrinter, AnyAnyPrinter, etc.
	- The JPEG autodetection didn't work with some JPEG files that
	  came from digital cameras (JPEG but not JFIF); the new
	  magic types should work with all images that the JPEG library
	  can handle.
	- Fixed a bug in the new contains() MIME type rule that could
	  cause cupsd to crash.
	- Switched to using strtol() in the MIME type code so that you
	  can use hex, octal, or decimal constants as desired in the
	  mime.types file.
	- Banner files are now treated as templates, allowing any type
	  of file to be used as a banner.
	- Added a 30-second timeout to backend device reports so that a
	  hung backend will not prevent the scheduler from starting.
	- Backends are once again terminated when jobs are stopped; the
	  CUPS-supplied backends will stay alive until the downstream
	  filters have had a chance to clear out old page data.
	- The charset lookup in the CUPS localization support was wrong
	  (iso8859-x instead of iso-8859-x)
	- Changed the "cpNNNN" code page files to "windows-NNNN" to match
	  the IANA registrations.
	- New PostScript banner pages.
	- Added Windows BMP and Alias PIX image file support to the image
	  filter.
	- The PNG reading coded didn't free all of its buffers.
	- Added Digest authentication support to the client and server
	  code.
	- Added Solaris options to System V commands.
	- Now support the output-bin job template attribute.
	- Now log the job-billing attribute in the page_log file, and
	  keep track of the total number of pages in the
	  job-media-sheets-completed attribute.
	- The penwidth option is now in micrometers to support more
	  accurate width specification.
	- The image filters now support interlaced and transparent PNG
	  files.
	- Didn't handle Keep-Alive for HTTP/1.0 clients.
	- The BrowsePoll support didn't handle when BrowseInterval
	  was set to 0 (now uses 30 seconds if BrowseInterval is 0)
	- The DeskJet driver now supports 600 DPI color for printers
	  that support it.
	- New lpinfo and lpmove commands.
	- The lpq command now supports the Digital UNIX output format.
	- The LPD mini-daemon now supports all required LPD operations.
	- Implemented timeouts for multi-file documents.
	- New cupsPrintFiles() function in the CUPS API library to
	  print multiple files using create-job and send-document
	  requests (1 job ID for multiple files)
	- The lp command now sends multiple files as a single job,
	  matching the behavior of the System V command.
	- The "cancel -a" command now purges job history files.


CHANGES IN CUPS v1.1b3

	- Documentation updates.
	- The startup script redirected stderr before stdout,
	  which caused problems with some versions of Bourne
	  shell and Bash.
	- Fixed a bug in the scheduler's PPD language reading
	  code.
	- Fixed a bug in the scheduler's check for the
	  manufacturer in the PPD.
	- The pstoraster filter didn't allow some input and
	  output attributes to be set.
	- Added banner page support.
	- Added missing PAM configuration file.
	- Configuration script fixes for Linux and *BSD.
	- The log file code was using the wrong sign for the
	  timezone offset.
	- The default printcap file is now empty (no printcap
	  file is generated).
	- The scheduler did not start jobs destined for remote
	  printers when they became available.
	- The scheduler now sends jobs to remote printers
	  immediately. (when sending jobs to a class, the remote
	  printer is only used when it becomes available)
	- The scheduler now supports printing of banner pages
	  via the job-sheets attribute (banner files go in
	  /usr/share/cups/banners)
	- The cupsd process now forks itself into the background
	  (override with -f)
	- Added several *BSD enhancements.
	- Added UNSUPPORTED libtool option to configuration
	  script to allow the use of libtool.  Note that this is
	  UNSUPPORTED by us, but added by request of the *BSD
	  folks.
	- The parallel, serial, and usb backends now retry the
	  opening of their ports.  This allows multiple print
	  queues to be associated with a single physical port,
	  and will allow CUPS to support several types of
	  parallel port auto-switches in the near future.
	- Set-Job-Attributes now supports adding, changing, and
	  deleting job template attributes, and no longer allows
	  job-printer-uri to be set (see CUPS-Move-Job)
	- Added CUPS-Move-Job operation to support moving of jobs.
	- The CGI template functionality now supports multiple
	  languages (still only have templates for English)
	- The CUPS-Get-Printers and CUPS-Get-Classes operations
	  now support filtering as defined in the IDD.
	- The Get-Jobs, CUPS-Get-Printers, and CUPS-Get-Classes
	  operations no longer limit themselves to 1000 jobs,
	  printers, or classes (believe it or not, this is
	  needed for some sites)
	- The web interfaces now support language-specific
	  templates.
	- The web admin interface now supports class management.
	- The web admin interface now shows a list of
	  manufacturers before selecting the PPD/driver for a
	  specific printer.
	- The web admin interface now supports configuration of
	  the default printer options in the PPD file.
	- The web interface now uses printer/class
	  authentication for the test page instead of admin
	  authentication.
	- Updated the RPM spec file for the current release.
	- Updated language support for Windows code pages.
	- 8-bit character set files can now use multiple fonts
	  (needed for Arabic, Greek, Hebrew, etc.)
	- Added basic right-to-left text support in the text
	  filter.
	- The POSIX locale now uses ISO-8859-1 instead of
	  US-ASCII.
	- Fixed PDF printing problems.
	- Fixed PostScript RIP page device dictionary elements
	  that weren't getting passed in cups_get_params().
	- Added a new "contains" rule for the magic file typing.
	- The "printable" rule now accepts characters from 128 to 255
	  (needed for Microsoft character sets)
	- Added support for ~/.cupsrc as well as /etc/cups/client.conf
	  so that the default server can be configured on a per-user
	  basis without environment variables.
	- Added LPD mini-daemon to support incoming LPD jobs.


CHANGES IN CUPS v1.1b2

	- Documentation updates.
	- The lp command didn't always load the user-defined
	  destinations, preventing it from seeing the default
	  printer.
	- Many configure script and makefile fixes.
	- The Microsoft code page files were missing from the
	  distribution.
	- Added a workaround for the HP IPP client (which is sending
	  an invalid printer-uri in requests)
	- Fixed the encoding of text-with-language and name-with-language
	  to match the IPP spec.
	- Added support for unknown value tags in the IPP routines
	  (previously they would be ignored)
	- Integrated GNU GhostScript 5.50 into the pstoraster filter.
	- Client hostname resolution was broken on little-endian
	  machines.
	- Now look at client.conf file for client's default server
	  and printer.
	- The cupsServer() function did not close the client.conf file
	  if it contained a ServerName directive.
	- Added BrowseAllow, BrowseDeny, BrowseOrder, BrowsePoll, and
	  BrowseRelay directives.
	- BrowseInterval 0 disables advertising of local printers, but
	  still receives information on remote printers.
	- New browse polling daemon (for polling servers on different
	  networks)
	- New PPD cache file for faster startup times with large numbers
	  of PPD files.
	- The Host: field was incorrectly required for HTTP/1.0 clients.
	- New set-job-attributes operation now supported.
	- The mime_load_types() and mime_load_convs() functions did not
	  close their input files.


CHANGES IN CUPS v1.1b1

	- NEW web-based administration interface.
	- NEW EPSON printer drivers.
	- NEW user-defined printers and options.
	- NEW persistent jobs and job history
	- NEW IPP/1.1 support
	- NEW template-based web interfaces.
	- NEW CUPS-get-devices and CUPS-get-ppds operations.
	- NEW support for create-job and send-file operations.
	- NEW certificate-based authentication for local
	      administration.
	- NEW USB backend.
	- The lpr command now produces human-readable error messages.
	- The lpq command now produces BSD standard format output
	  instead of OSF/1 output.  This should resolve the SAMBA
	  print queue problems that have been reported.
	- The IPP backend did not always detect when the "raw" option
	  was being used.
	- The "lpstat -p" command would stop after the first active
	  printer.
	- The "lpstat -v" command would stop before the first remote
	  printer.
