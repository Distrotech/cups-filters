%!PS-Adobe-3.0
%%BoundingBox: 0 0 612 792
%%Pages: 1
%%LanguageLevel: 1
%%DocumentData: Clean7Bit
%%DocumentSuppliedResources: procset bannerprint/1.0
%%DocumentNeededResources: font Helvetica Helvetica-Bold Times-Roman
%%Creator: Michael Sweet, Easy Software Products
%%CreationDate: May 10, 2000
%%Title: Test Page
%%EndComments
%%BeginProlog
%%BeginResource procset bannerprint 1.1 0
%
%   PostScript banner page for the Common UNIX Printing System ("CUPS").
%
%   Copyright 1993-2005 Easy Software Products
%
%   These coded instructions, statements, and computer programs are the
%   property of Easy Software Products and are protected by Federal
%   copyright law.  Distribution and use rights are outlined in the file
%   "LICENSE.txt" which should have been included with this file.  If this
%   file is missing or damaged please contact Easy Software Products
%   at:
%
%       Attn: CUPS Licensing Information
%       Easy Software Products
%       44141 Airport View Drive, Suite 204
%       Hollywood, Maryland 20636 USA
%
%       Voice: (301) 373-9600
%       EMail: cups-info@cups.org
%         WWW: http://www.cups.org
%
/CENTER {			% Draw centered text
				% (name) CENTER -
  dup stringwidth pop		% Get the width of the string
  0.5 mul neg 0 rmoveto		% Shift left 1/2 of the distance
  show				% Show the string
} bind def
/RIGHT {			% Draw right-justified text
				% (name) RIGHT -
  dup stringwidth pop		% Get the width of the string
  neg 0 rmoveto			% Shift left the entire distance
  show				% Show the string
} bind def
/NUMBER {			% Draw a number
				% power n NUMBER -
  1 index 1 eq {		% power == 1?
    round cvi exch pop		% Convert "n" to integer
  } {
    1 index mul round exch div	% Truncate extra decimal places
  } ifelse
  100 string cvs show		% Convert to a string and show it...
} bind def
/CUPSLOGO {			% Draw the CUPS logo
				% height CUPSLOGO
  % Start with a big C...
  /Helvetica findfont 1 index scalefont setfont
  0 setgray
  0 0 moveto
  (C) show

  % Then "UNIX Printing System" much smaller...
  /Helvetica-Bold findfont 1 index 9 div scalefont setfont
  0.25 mul
  dup dup 2.0 mul moveto
  (UNIX) show
  dup dup 1.6 mul moveto
  (Printing) show
  dup 1.2 mul moveto
  (System) show
} bind def
/ESPLOGO {			% Draw the ESP logo
				% height ESPLOGO
  % Compute the size of the logo...
  0 0
  2 index 1.5 mul 3 index

  % Do the "metallic" fill from 10% black to 40% black...
  1 -0.001 0 {
    dup			% loopval
    -0.15 mul		% loopval * -0.15
    0.9 add		% 0.9 - loopval * 0.15
    setgray		% set gray shade

    0			% x
    1 index neg		% loopval
    1 add		% 1 - loopval
    3 index		% height
    mul			% height * (1 - loopval)
    moveto		% starting point

    dup			% loopval
    3 index		% width
    mul			% loopval * width
    2 index		% height
    lineto		% Next point

    0			% x
    2 index		% height
    lineto		% Next point

    closepath
    fill

    dup			% loopval
    0.15 mul		% loopval * 0.15
    0.6 add		% 0.6 + loopval * 0.15
    setgray

    dup			% loopval
    neg 1 add		% 1 - loopval
    3 index		% width
    mul			% (1 - loopval) * width
    0			% y
    moveto		% Starting point

    2 index		% width
    exch		% loopval
    2 index		% height
    mul			% loopval * height
    lineto		% Next point

    1 index		% width
    0			% y
    lineto		% Next point

    closepath
    fill
  } for

  0 setgray rectstroke

  /Helvetica-BoldOblique findfont 1 index 3 div scalefont setfont
  dup 40 div

  dup 4 mul 1 index 25 mul moveto (E) show
  dup 10 mul 1 index 15 mul moveto (S) show
  dup 16 mul 1 index 5 mul moveto (P) show

  /Helvetica-BoldOblique findfont 2 index 5 div scalefont setfont
  dup 14 mul 1 index 29 mul moveto (asy) show
  dup 20 mul 1 index 19 mul moveto (oftware) show
  dup 26 mul 1 index 9 mul moveto (roducts) show

  pop
} bind def
%%EndResource
%%EndProlog
%%Page: 1 1
gsave

  % Determine the imageable area and device resolution...
  initclip newpath clippath pathbbox	% Get bounding rectangle
  72 div /pageTop exch def		% Get top margin in inches
  72 div /pageRight exch def		% Get right margin in inches
  72 div /pageBottom exch def		% Get bottom margin in inches
  72 div /pageLeft exch def		% Get left margin in inches

  /pageWidth pageRight pageLeft sub def	% pageWidth = pageRight - pageLeft
  /pageHeight pageTop pageBottom sub def% pageHeight = pageTop - pageBottom

  /boxWidth				% width of text box
  pageWidth pageHeight lt
  { pageWidth 54 mul }
  { pageHeight 42 mul }
  ifelse def

  newpath				% Clear bounding path

  % Create fonts...
  /bigFont /Helvetica-Bold findfont	% bigFont = Helvetica-Bold
  pageHeight 3 mul scalefont def	% size = pageHeight * 3 (nominally 33)

  /mediumFont /Helvetica findfont	% mediumFont = Helvetica
  pageHeight 1.5 mul scalefont def	% size = pageHeight * 1.5 (nominally 16.5)

  % Offset page to account for lower-left margin...
  pageLeft 72 mul
  pageBottom 72 mul
  translate

  % Draw the label at the top and bottom...
  0 setgray				% Color

  pageWidth 36 mul			% Center of page
  pageHeight 72 mul			% Top of page
  pageWidth -7 mul add			% - 2 lines
  moveto				% Position text
  bigFont setfont			% Font
  (Secret) CENTER			% Show text centered

  pageWidth 36 mul			% Center of page
  pageHeight 6 mul			% Bottom of page
  moveto				% Position text
  bigFont setfont			% Font
  (Secret) CENTER			% Show text centered

  % Job information box...
  pageWidth 36 mul 9 add		% x = pageWidth * 1/2 * 72 + 9
  boxWidth 0.5 mul sub			% x-= 1/2 box width
  pageHeight 30 mul 9 sub		% y = pageHeight * 1/2 * 72 - 9
  boxWidth				% w = box width
  pageHeight 14 mul			% h = pageHeight * 1/2 * 72
  0.5 setgray rectfill			% Draw a shadow

  pageWidth 36 mul			% x = pageWidth * 1/2 * 72
  boxWidth 0.5 mul sub			% x-= 1/2 box width
  pageHeight 30 mul			% y = pageHeight * 1/4 * 72
  boxWidth				% w = box width
  pageHeight 14 mul			% h = pageHeight * 1/2 * 72

  4 copy 1 setgray rectfill		% Clear the box to white
  0 setgray rectstroke			% Draw a black box around it...

  % Job information text...
  mediumFont setfont			% Medium sized font

  pageWidth 36 mul			% x = pageWidth * 1/2 * 72
  pageHeight 36 mul			% y = pageHeight * 1/2 * 72
  pageHeight 5 mul add			% y += 2 lines
  2 copy				% Copy X & Y
  moveto
  (Job ID: ) RIGHT
  moveto
  ({printer-name}-{job-id}) show

  pageWidth 36 mul			% x = pageWidth * 1/2 * 72
  pageHeight 36 mul			% y = pageHeight * 1/2 * 72
  pageHeight 2 mul add			% y += 1 line
  2 copy				% Copy X & Y
  moveto
  (Title: ) RIGHT
  moveto
  ({job-name}) show

  pageWidth 36 mul			% x = pageWidth * 1/2 * 72
  pageHeight 36 mul			% y = pageHeight * 1/2 * 72
  pageHeight -1 mul add			% y -= 1 line
  2 copy				% Copy X & Y
  moveto
  (Requesting User: ) RIGHT
  moveto
  ({job-originating-user-name}) show

  pageWidth 36 mul			% x = pageWidth * 1/2 * 72
  pageHeight 36 mul			% y = pageHeight * 1/2 * 72
  pageHeight -4 mul add			% y -= 2 lines
  2 copy				% Copy X & Y
  moveto
  (Billing Info: ) RIGHT
  moveto
  ({job-billing}) show

  % Then the CUPS logo....
  gsave
    pageWidth 4 mul
    pageWidth 6 mul
    translate
    pageWidth 9 mul CUPSLOGO
  grestore

  % And the ESP logo....
  gsave
    pageWidth 59 mul
    pageWidth 6 mul
    translate
    pageWidth 6 mul ESPLOGO
  grestore
% Show the page...
grestore
showpage
%
% End of "$Id$".
%
%%EOF
