%    Copyright (C) 1996 Aladdin Enterprises.  All rights reserved.
% 
% This file is part of GNU Ghostscript.
% 
% GNU Ghostscript is distributed in the hope that it will be useful, but
% WITHOUT ANY WARRANTY.  No author or distributor accepts responsibility to
% anyone for the consequences of using it or for whether it serves any
% particular purpose or works at all, unless he says so in writing.  Refer to
% the GNU General Public License for full details.
% 
% Everyone is granted permission to copy, modify and redistribute GNU
% Ghostscript, but only under the conditions described in the GNU General
% Public License.  A copy of this license is supposed to have been given to
% you along with GNU Ghostscript so you can know your rights and
% responsibilities.  It should be in a file named COPYING.  Among other
% things, the copyright notice and this notice must be preserved on all
% copies.
% 
% Aladdin Enterprises is not affiliated with the Free Software Foundation or
% the GNU Project.  GNU Ghostscript, as distributed by Aladdin Enterprises,
% does not depend on any other GNU software.

% Type 42 font support code.

% Here are the BuildChar and BuildGlyph implementation for Type 42 fonts.
% The names %Type42BuildChar and %Type42BuildGlyph are known to the
% interpreter.  The real work is done in an operator:
%	<font> <code|name> <name> <charstring> .type42execchar -

(%Type42BuildChar) cvn	% <font> <code> %Type42BuildChar -
 { 1 index /Encoding get 1 index get .type42build
 } bind def
(%Type42BuildGlyph) cvn	% <font> <name> %Type42BuildGlyph -
 { dup .type42build
 } bind def
/.type42build		% <font> <code|name> <name> .type42build -
 { 2 index begin
    dup CharStrings exch .knownget not
     { 2 copy eq { exch pop /.notdef exch } if
       QUIET not
	{ (Substituting .notdef for ) print = flush }
	{ pop }
       ifelse
       /.notdef CharStrings /.notdef get
     } if
   end .type42execchar
 } bind def
