dnl
dnl "$Id: configure.in,v 1.76 2001/02/08 19:24:13 mike Exp $"
dnl
dnl   Configuration script for the Common UNIX Printing System (CUPS).
dnl
dnl   Copyright 1997-2001 by Easy Software Products, all rights reserved.
dnl
dnl   These coded instructions, statements, and computer programs are the
dnl   property of Easy Software Products and are protected by Federal
dnl   copyright law.  Distribution and use rights are outlined in the file
dnl   "LICENSE.txt" which should have been included with this file.  If this
dnl   file is missing or damaged please contact Easy Software Products
dnl   at:
dnl
dnl       Attn: CUPS Licensing Information
dnl       Easy Software Products
dnl       44141 Airport View Drive, Suite 204
dnl       Hollywood, Maryland 20636-3111 USA
dnl
dnl       Voice: (301) 373-9603
dnl       EMail: cups-info@cups.org
dnl         WWW: http://www.cups.org
dnl

AC_INIT(cups/cups.h)
AC_CONFIG_HEADER(config.h)
AC_PREFIX_DEFAULT(/)

dnl Get the operating system and version number...

uname=`uname`
uversion=`uname -r | sed -e '1,$s/[[^0-9]]//g'`
if test "$uname" = "IRIX64"; then
    uname="IRIX"
fi

dnl Clear the debugging and non-shared library options unless the user asks
dnl for them...

OPTIM=""
AC_SUBST(OPTIM)
GSOPTIM=""
AC_SUBST(GSOPTIM)
PICFLAG=1
CFLAGS="${CFLAGS:=}"
CXXFLAGS="${CXXFLAGS:=}"
DSOFLAGS="${DSOFLAGS:=}"
AC_SUBST(DSOFLAGS)

AC_ARG_ENABLE(debug, [  --enable-debug        turn on debugging [default=no]],[if eval "test x$enable_debug = xyes"; then
	OPTIM="-g"
	GSOPTIM="-g"
fi])
AC_ARG_ENABLE(shared, [  --enable-shared        turn on shared libraries [default=yes]])
AC_ARG_ENABLE(ssl, [  --enable-ssl           turn on SSL/TLS support [default=no]])
AC_ARG_ENABLE(libtool_unsupported, [  --enable-libtool-unsupported=LIBTOOL_PATH
                          turn on building with libtool (UNSUPPORTED!) [default=no]],[if eval "test x$enable_libtool_unsupported != xno"; then
	LIBTOOL="$enable_libtool_unsupported"
	enable_shared=no
	echo "WARNING: libtool is not supported or endorsed by Easy Software Products."
	echo "         WE DO NOT PROVIDE TECHNICAL SUPPORT FOR LIBTOOL PROBLEMS."
	echo "         (even if you have a support contract)"
else
	LIBTOOL=""
fi])

if test "$enable_shared" != "no"; then
	case "$uname" in
		SunOS* | UNIX_S*)
			LIBCUPS="libcups.so.2"
			LIBCUPSIMAGE="libcupsimage.so.2"
			DSO="\$(CC)"
			DSOFLAGS="$DSOFLAGS -Wl,-h,\$@ -G \$(OPTIM)"
			;;
		HP-UX*)
			LIBCUPS="libcups.sl.2"
			LIBCUPSIMAGE="libcupsimage.sl.2"
			DSO="ld"
			DSOFLAGS="$DSOFLAGS -b -z +h \$@"
			;;
		FreeBSD* | NetBSD* | OpenBSD*)
			LIBCUPS="libcups.so.2"
			LIBCUPSIMAGE="libcupsimage.so.2"
			DSO="\$(CC)"
			DSOFLAGS="$DSOFLAGS -Wl,-soname,\$@ -shared \$(OPTIM)"
			;;
		OSF1* | Linux*)
			LIBCUPS="libcups.so.2"
			LIBCUPSIMAGE="libcupsimage.so.2"
			DSO="\$(CC)"
			DSOFLAGS="$DSOFLAGS -Wl,-soname,\$@ -shared \$(OPTIM)"
			;;
		IRIX*)
			LIBCUPS="libcups.so.2"
			LIBCUPSIMAGE="libcupsimage.so.2"
			DSO="\$(CC)"
			DSOFLAGS="$DSOFLAGS -soname \$@ -shared \$(OPTIM)"
			;;
		*)
			echo "Warning: shared libraries may not be supported.  Trying -shared"
			echo "         option with compiler."
			LIBCUPS="libcups.so.2"
			LIBCUPSIMAGE="libcupsimage.so.2"
			DSO="\$(CC)"
			DSOFLAGS="$DSOFLAGS -Wl,-soname,\$@ -shared \$(OPTIM)"
			;;
	esac
else
	PICFLAG=0
	LIBCUPS="libcups.a"
	LIBCUPSIMAGE="libcupsimage.a"
	DSO=":"
fi

if test "$LIBTOOL" != ""; then
	LIBCUPS="libcups.la"
	LIBCUPSIMAGE="libcupsimage.la"
	LINKCUPS="../cups/\$(LIBCUPS)"
	LINKCUPSIMAGE="../filter/\$(LIBCUPSIMAGE)"
	DSO=":"
	DSOFLAGS=""
else
	LINKCUPS="-L../cups -lcups"
	LINKCUPSIMAGE="-L../filter -lcupsimage"
fi

AC_ARG_ENABLE(pam, [  --enable-pam        turn on PAM support [default=yes]])

AC_ARG_WITH(fontpath, [  --with-fontpath     set font path for pstoraster],fontpath="$withval",fontpath="")

dnl Checks for programs...
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_RANLIB
AC_PATH_PROG(AR,ar)
AC_PATH_PROG(CHMOD,chmod)
AC_PATH_PROG(CHOWN,chown)
AC_PATH_PROG(CP,cp)
AC_PATH_PROG(MV,mv)
AC_PATH_PROG(NROFF,nroff)
if test "$NROFF" = ""; then
    AC_PATH_PROG(GROFF,groff)
    if test "$GROFF" = ""; then
        NROFF="echo"
    else
        NROFF="$GROFF -T ascii"
    fi
fi
AC_PATH_PROG(HTMLDOC,htmldoc)
AC_PATH_PROG(MKDIR,mkdir)
AC_PATH_PROG(RM,rm)
AC_PATH_PROG(SED,sed)

dnl Architecture checks...
AC_C_BIGENDIAN

dnl Check for libraries...
AC_CHECK_LIB(c,crypt,LIBS="$LIBS")
if test "$ac_cv_lib_c_crypt" = "no"; then
	AC_CHECK_LIB(crypt,crypt)
fi
AC_CHECK_LIB(sec,getspent)

LIBMALLOC=""
AC_CHECK_LIB(c,mallinfo,LIBS="$LIBS"; AC_DEFINE(HAVE_MALLINFO),LIBS="$LIBS")
if test "$ac_cv_lib_c_mallinfo" = "no"; then
	AC_CHECK_LIB(malloc,mallinfo,
	             LIBS="$LIBS"
		     LIBMALLOC="-lmalloc"
		     AC_DEFINE(HAVE_MALLINFO),
		     LIBS="$LIBS")
fi
AC_SUBST(LIBMALLOC)

if test "$enable_pam" != "no"; then
	OLDLIBS="$LIBS"
	AC_CHECK_LIB(dl,dlopen)
	AC_CHECK_LIB(pam,pam_start)
	if test "$ac_cv_lib_pam_pam_start" != "no"; then
		PAMDIR="/etc/pam.d"
	else
		PAMDIR=""
		LIBS="$OLDLIBS"
	fi
	AC_SUBST(PAMDIR)
fi

NETLIBS=""
AC_SUBST(NETLIBS)
AC_CHECK_LIB(socket,socket,
if test "$uname" != "IRIX"; then
	NETLIBS="-lsocket"
else
	echo "Not using -lsocket since you are running IRIX."
fi)
AC_CHECK_LIB(nsl,gethostbyaddr,
if test "$uname" != "IRIX"; then
	NETLIBS="$NETLIBS -lnsl"
else
	echo "Not using -lnsl since you are running IRIX."
fi)

dnl Encryption support...

SSLLIBS=""
AC_SUBST(SSLLIBS)

if test "$enable_ssl" = "yes"; then
	dnl Save the current libraries so the crypto stuff isn't always
	dnl included...
	SAVELIBS="$LIBS"

	dnl Some ELF systems can't resolve all the symbols in libcrypto
	dnl if libcrypto was linked against RSAREF, and fail to link the
	dnl test program correctly, even though a correct installation
	dnl of OpenSSL exists.  So we test the linking three times in
	dnl case the RSAREF libraries are needed.

	for libcrypto in \
		"-lcrypto" \
		"-lcrypto -lrsaref" \
		"-lcrypto -lRSAglue -lrsaref"
	do
		AC_CHECK_LIB(ssl,SSL_new,
			[SSLLIBS="-lssl $libcrypto"
			 AC_DEFINE(HAVE_LIBSSL)],,
			$libcrypto
		)
		if test "x${SSLLIBS}" != "x"; then
			break
		fi
	done

	LIBS="$SAVELIBS"
fi

dnl Save the current libraries since we don't want the image libraries
dnl included with every program...
SAVELIBS="$LIBS"

dnl Check for image libraries...
LIBJPEG=""
LIBPNG=""
LIBTIFF=""
LIBZ=""

AC_SUBST(LIBJPEG)
AC_SUBST(LIBPNG)
AC_SUBST(LIBTIFF)
AC_SUBST(LIBZ)

AC_CHECK_LIB(jpeg, jpeg_destroy_decompress,
    AC_DEFINE(HAVE_LIBJPEG)
    LIBJPEG="-ljpeg"
    LIBS="$LIBS -ljpeg")

AC_CHECK_LIB(z, gzgets,
    AC_DEFINE(HAVE_LIBZ)
    LIBZ="-lz"
    LIBS="$LIBS -lz")

dnl PNG library uses math library functions...
AC_CHECK_LIB(m, pow)

AC_CHECK_LIB(png, png_set_tRNS_to_alpha,
    AC_DEFINE(HAVE_LIBPNG)
    LIBPNG="-lpng")

AC_CHECK_LIB(tiff, TIFFReadScanline,
    AC_DEFINE(HAVE_LIBTIFF)
    LIBTIFF="-ltiff")

dnl Restore original LIBS settings...
LIBS="$SAVELIBS"

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_DIRENT
AC_CHECK_HEADER(crypt.h,AC_DEFINE(HAVE_CRYPT_H))
AC_CHECK_HEADER(malloc.h,AC_DEFINE(HAVE_MALLOC_H))
AC_CHECK_HEADER(shadow.h,AC_DEFINE(HAVE_SHADOW_H))
AC_CHECK_HEADER(stddef.h,AC_DEFINE(HAVE_STDDEF_H))
AC_CHECK_HEADER(stdlib.h,AC_DEFINE(HAVE_STDLIB_H))
AC_CHECK_HEADER(sys/ioctl.h,AC_DEFINE(HAVE_SYS_IOCTL_H))

dnl Checks for string functions.
AC_CHECK_FUNCS(strdup)
AC_CHECK_FUNCS(strcasecmp)
AC_CHECK_FUNCS(strncasecmp)
if test "$uname" = "HP-UX" -a "$uversion" = "1020"; then
	echo Forcing snprintf emulation for HP-UX.
else
	AC_CHECK_FUNCS(snprintf)
	AC_CHECK_FUNCS(vsnprintf)
fi

dnl Check OS version and use appropriate format string for strftime...
AC_MSG_CHECKING(for correct format string to use with strftime)

case "$uname" in
	IRIX* | SunOS*)
		# IRIX and SunOS
		AC_MSG_RESULT(NULL)
		AC_DEFINE(CUPS_STRFTIME_FORMAT, NULL)
		;;
	*)
		# All others
		AC_MSG_RESULT("%c")
		AC_DEFINE(CUPS_STRFTIME_FORMAT, "%c")
		;;
esac

dnl Checks for vsyslog function.
AC_CHECK_FUNCS(vsyslog)

dnl Checks for signal functions.
if test "$uname" != "Linux"; then
	AC_CHECK_FUNCS(sigset)
fi

AC_CHECK_FUNCS(sigaction)

dnl Checks for wait functions.
AC_CHECK_FUNCS(waitpid)
AC_CHECK_FUNCS(wait3)

dnl Update compiler options...
if test -n "$GCC"; then
	GXX="gcc"

	if test -z "$OPTIM"; then
	       	OPTIM="-O2"
		GSOPTIM="-O1"
	fi
	if test $PICFLAG = 1; then
    		OPTIM="-fPIC $OPTIM"
    		GSOPTIM="-fPIC $GSOPTIM"
	fi
	OPTIM="-Wall $OPTIM"
	GSOPTIM="-Wall $GSOPTIM"
else
	case $uname in
        	IRIX*)
			if test -z "$OPTIM"; then
        			OPTIM="-O2"
        			GSOPTIM="-O1"
			fi
			if test $uversion -ge 62; then
				OPTIM="$OPTIM -n32 -mips3"
				GSOPTIM="$GSOPTIM -n32 -mips3"
			fi
			OPTIM="-fullwarn $OPTIM"
			GSOPTIM="-fullwarn $GSOPTIM"
			;;
		HP-UX*)
			if test -z "$OPTIM"; then
				OPTIM="+O2"
				GSOPTIM="+O1"
			fi
			OPTIM="-Ae $OPTIM"
			GSOPTIM="-Ae $GSOPTIM"
			;;
		SunOS*)
			# Solaris
			if test -z "$OPTIM"; then
				OPTIM="-xO4"
				GSOPTIM="-xO2"
			fi
			if test $PICFLAG = 1; then
				OPTIM="-KPIC $OPTIM"
				GSOPTIM="-KPIC $GSOPTIM"
			fi
			;;
		*)
			# Running some other operating system; inform the user they
			# should contribute the necessary options to
			# cups-support@cups.org...
			echo "Building CUPS with default compiler optimizations; contact"
			echo "cups-support@cups.org with uname and compiler options needed"
			echo "for your platform, or set the CFLAGS environment variable"
			echo "before running configure."
			;;
	esac
fi

if test "$DSO" != ":"; then
	# When using DSOs the image libraries are linked to libcupsimage.so
	# rather than to the executables.  This makes things smaller if you
	# are using any static libraries, and it also allows us to distribute
	# a single DSO rather than a bunch...
	DSOLIBS="\$(LIBPNG) \$(LIBTIFF) \$(LIBJPEG) \$(LIBZ)"
	IMGLIBS=""

	# The *BSD, HP-UX, and Solaris run-time linkers need help when
	# deciding where to find a DSO.  Add linker options to tell them
	# where to find the DSO (usually in /usr/lib...  duh!)
	case $uname in
                HP-UX*)
			# HP-UX
                	DSOFLAGS="+b $libdir +fb $DSOFLAGS"
                	LDFLAGS="$LDFLAGS -Wl,+b,$libdir,+fb"
                	;;
                SunOS*)
                	# Solaris
                	DSOFLAGS="-R$libdir $DSOFLAGS"
                	LDFLAGS="$LDFLAGS -R$libdir"
                	;;
                FreeBSD* | NetBSD* | OpenBSD*)
                        # *BSD
                	DSOFLAGS="-Wl,-R$libdir $DSOFLAGS"
                        LDFLAGS="$LDFLAGS -Wl,-R$libdir"
                        ;;
	esac
else
	DSOLIBS=""
	IMGLIBS="\$(LIBPNG) \$(LIBTIFF) \$(LIBJPEG) \$(LIBZ)"
fi

AC_SUBST(DSO)
AC_SUBST(DSOLIBS)
AC_SUBST(IMGLIBS)
AC_SUBST(LIBCUPS)
AC_SUBST(LIBCUPSIMAGE)
AC_SUBST(LIBTOOL)
AC_SUBST(LINKCUPS)
AC_SUBST(LINKCUPSIMAGE)

dnl Fix "prefix" variable if it hasn't been specified...
if test "$prefix" = "NONE"; then
	prefix="/"
fi

dnl Fix "exec_prefix" variable if it hasn't been specified...
if test "$exec_prefix" = "NONE"; then
	if test "$prefix" = "/"; then
		exec_prefix="/usr"
	else
		exec_prefix="$prefix"
	fi
fi

dnl Fix "sharedstatedir" variable if it hasn't been specified...
if test "$sharedstatedir" = "\${prefix}/com" -a "$prefix" = "/"; then
	sharedstatedir="/usr/com"
fi

dnl Fix "infodir" variable if it hasn't been specified...
if test "$infodir" = "\${prefix}/info" -a "$prefix" = "/"; then
	infodir="/usr/info"
fi

dnl Fix "datadir" variable if it hasn't been specified...
if test "$datadir" = "\${prefix}/share"; then
	if test "$prefix" = "/"; then
		datadir="/usr/share"
	else
		datadir="$prefix/share"
	fi
fi

dnl Fix "includedir" variable if it hasn't been specified...
if test "$includedir" = "\${prefix}/include" -a "$prefix" = "/"; then
	includedir="/usr/include"
fi

dnl Fix "localstatedir" variable if it hasn't been specified...
if test "$localstatedir" = "\${prefix}/var"; then
	if test "$prefix" = "/"; then
		localstatedir="/var"
	else
		localstatedir="$prefix/var"
	fi
fi

dnl Fix "sysconfdir" variable if it hasn't been specified...
if test "$sysconfdir" = "\${prefix}/etc"; then
	if test "$prefix" = "/"; then
		sysconfdir="/etc"
	else
		sysconfdir="$prefix/etc"
	fi
fi

dnl Fix "libdir" variable for IRIX 6.x...
if test "$uname" = "IRIX" -a $uversion -ge 62; then
	libdir="$exec_prefix/lib32"
fi

dnl Fix "mandir" variable...
if test "$mandir" = "\${prefix}/man" -a "$prefix" = "/"; then
	case "$uname" in
        	FreeBSD* | NetBSD* | OpenBSD*)
        		# *BSD
        		mandir="/usr/share/man"
        		;;
        	IRIX*)
        		# SGI IRIX
        		mandir="/usr/share/catman"
        		;;
        	*)
        		# All others
        		mandir="/usr/man"
        		;;
	esac
fi

dnl Fix "fontpath" variable...
if test "x$fontpath" = "x"; then
	fontpath="$datadir/cups/fonts"
fi

dnl Setup manpage extensions...
case "$uname" in
	FreeBSD* | NetBSD* | OpenBSD*)
		# *BSD
		CAT1EXT=0
		CAT5EXT=0
		CAT8EXT=0
		;;
	IRIX*)
		# SGI IRIX
		CAT1EXT=z
		CAT5EXT=z
		CAT8EXT=z
		;;
	*)
		# All others
		CAT1EXT=1
		CAT5EXT=5
		CAT8EXT=8
		;;
esac

AC_SUBST(CAT1EXT)
AC_SUBST(CAT5EXT)
AC_SUBST(CAT8EXT)

dnl Setup init.d locations...
case "$uname" in
	FreeBSD* | OpenBSD*)
		# FreeBSD and OpenBSD
		INITDIR=""
		INITDDIR=""
		;;

	NetBSD*)
		# NetBSD
		INITDIR=""
		INITDDIR="/etc/rc.d"
		;;

	Linux*)
		# Linux seems to choose an init.d directory at random...
		if test -d /sbin/init.d; then
			# SuSE
			INITDIR="/sbin/init.d"
			INITDDIR=".."
		else
			if test -d /etc/rc.d; then
				# RedHat
				INITDIR="/etc/rc.d"
				INITDDIR="../init.d"
			else
				# Others
				INITDIR="/etc"
				INITDDIR="../init.d"
			fi
		fi
		;;

	OSF1* | HP-UX*)
		INITDIR="/sbin"
		INITDDIR="../init.d"
		;;

	*)
		INITDIR="/etc"
		INITDDIR="../init.d"
		;;

esac

AC_SUBST(INITDIR)
AC_SUBST(INITDDIR)

dnl Setup default locations...
CUPS_SERVERROOT='${sysconfdir}/cups'
CUPS_LOGDIR='${localstatedir}/log/cups'
CUPS_REQUESTS='${localstatedir}/spool/cups'

AC_DEFINE_UNQUOTED(CUPS_SERVERROOT, "$sysconfdir/cups")
AC_DEFINE_UNQUOTED(CUPS_LOGDIR, "$localstatedir/log/cups")
AC_DEFINE_UNQUOTED(CUPS_REQUESTS, "$localstatedir/spool/cups")

dnl See what directory to put server executables...
case "$uname" in
	FreeBSD* | NetBSD* | OpenBSD*)
		# *BSD
		INSTALL_SYSV=""
		CUPS_SERVERBIN='${exec_prefix}/libexec/cups'
		AC_DEFINE_UNQUOTED(CUPS_SERVERBIN, "$exec_prefix/libexec/cups")
		;;
	*)
		# All others
		INSTALL_SYSV="install-sysv"
		CUPS_SERVERBIN='${exec_prefix}/lib/cups'
		AC_DEFINE_UNQUOTED(CUPS_SERVERBIN, "$exec_prefix/lib/cups")
		;;
esac

AC_SUBST(INSTALL_SYSV)
AC_SUBST(CUPS_SERVERROOT)
AC_SUBST(CUPS_SERVERBIN)
AC_SUBST(CUPS_LOGDIR)
AC_SUBST(CUPS_REQUESTS)

dnl Set the CUPS_LOCALE directory...
case "$uname" in
	Linux* | FreeBSD* | NetBSD* | OpenBSD*)
		CUPS_LOCALEDIR='${datadir}/locale'
		AC_DEFINE_UNQUOTED(CUPS_LOCALEDIR, "$datadir/locale")
		;;

	OSF1*)
		CUPS_LOCALEDIR='${exec_prefix}/lib/nls/msg'
		AC_DEFINE_UNQUOTED(CUPS_LOCALEDIR, "$exec_prefix/lib/nls/msg")
		;;

	*)
		# This is the standard System V location...
		CUPS_LOCALEDIR='${exec_prefix}/lib/locale'
		AC_DEFINE_UNQUOTED(CUPS_LOCALEDIR, "$exec_prefix/lib/locale")
		;;
esac

AC_SUBST(CUPS_LOCALEDIR)

dnl Set the CUPS_DATADIR directory...
CUPS_DATADIR='${datadir}/cups'
AC_DEFINE_UNQUOTED(CUPS_DATADIR, "$datadir/cups")
AC_SUBST(CUPS_DATADIR)

dnl Set the CUPS_DOCROOT directory...
CUPS_DOCROOT='${datadir}/doc/cups'
AC_DEFINE_UNQUOTED(CUPS_DOCROOT, "$datadir/doc/cups")
AC_SUBST(CUPS_DOCROOT)

dnl Set the CUPS_FONTPATH directory...
AC_DEFINE_UNQUOTED(CUPS_FONTPATH, "$fontpath")

AC_OUTPUT(Makedefs cups.sh)

dnl
dnl End of "$Id: configure.in,v 1.76 2001/02/08 19:24:13 mike Exp $".
dnl
