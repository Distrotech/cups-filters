diff -ur ghostscript-7.05/lib/gs_setpd.ps espgs/lib/gs_setpd.ps
--- ghostscript-7.05/lib/gs_setpd.ps	Fri Feb 22 14:45:55 2002
+++ espgs/lib/gs_setpd.ps	Tue Apr 23 08:37:55 2002
@@ -13,7 +13,7 @@
 % contact Artifex Software, Inc., 101 Lucas Valley Road #110,
 % San Rafael, CA  94903, U.S.A., +1(415)492-9861.
 
-% $Id: gs_setpd.ps,v 1.8.2.2 2002/02/22 19:45:55 ray Exp $
+% $Id: gs_setpd.ps,v 1.7 2002/04/23 12:37:55 easysw Exp $
 % The current implementation of setpagedevice has the following limitations:
 %	- It doesn't attempt to "interact with the user" for Policy = 2.
 
@@ -321,21 +321,42 @@
     } bind
 .dicttomark readonly def
 
-% Define the keys used in input attribute matching.
-/.inputattrkeys [
-  /PageSize /MediaColor /MediaWeight /MediaType /InsertSheet
-	% The following are documented in Adobe's supplement for v2017.
-  /LeadingEdge /MediaClass
-] readonly def
-% Define other keys used in media selection.
-/.inputselectionkeys [
-  /MediaPosition /Orientation
-] readonly def
-
-% Define the keys used in output attribute matching.
-/.outputattrkeys [
-  /OutputType
-] readonly def
+% M. Sweet, Easy Software Products:
+%
+% Define NOMEDIAATTRS to turn the default (but unimplementable) media
+% selection policies for setpagedevice.  This is used by CUPS to
+% support the standard Adobe media attributes.
+currentdict /NOMEDIAATTRS known {
+  % Define the keys used in input attribute matching.
+  /.inputattrkeys [
+    /PageSize /MediaColor /MediaWeight /MediaType /InsertSheet
+	  % The following are documented in Adobe's supplement for v2017.
+    /LeadingEdge /MediaClass
+  ] readonly def
+  % Define other keys used in media selection.
+  /.inputselectionkeys [
+    /MediaPosition /Orientation
+  ] readonly def
+
+  % Define the keys used in output attribute matching.
+  /.outputattrkeys [
+    /OutputType
+  ] readonly def
+} {
+  % Define only PageSize for input attribute matching.
+  /.inputattrkeys [
+    /PageSize
+  ] readonly def
+  % Define no other keys used in media selection.
+  /.inputselectionkeys [
+    /noInputSelectionsKeys
+  ] readonly def
+
+  % Define no keys used in output attribute matching.
+  /.outputattrkeys [
+    /noOutputAttrKeys
+  ] readonly def
+} ifelse
 
 % Define all the parameters that should always be copied to the merged
 % dictionary.
diff -ur ghostscript-7.05/src/Makefile.in espgs/src/Makefile.in
--- ghostscript-7.05/src/Makefile.in	Fri Apr 19 18:23:09 2002
+++ espgs/src/Makefile.in	Tue Apr 23 11:18:45 2002
@@ -13,7 +13,7 @@
 # contact Artifex Software, Inc., 101 Lucas Valley Road #110,
 # San Rafael, CA  94903, U.S.A., +1(415)492-9861.
 
-# $Id: Makefile.in,v 1.1.4.7 2002/04/19 22:23:09 giles Exp $
+# $Id: Makefile.in,v 1.10 2002/04/23 15:18:45 easysw Exp $
 # makefile template for/from the autoconf build.
 # @configure_input@
 
@@ -70,7 +70,7 @@
 # Define the default directory/ies for the runtime
 # initialization and font files.  Separate multiple directories with a :.
 
-GS_LIB_DEFAULT=$(gsdatadir)/lib:$(gsdir)/fonts
+GS_LIB_DEFAULT=$(gsdatadir)/lib:$(gsdir)/fonts:@fontpath@
 
 # Define whether or not searching for initialization files should always
 # look in the current directory first.  This leads to well-known security
@@ -110,7 +110,7 @@
 
 # Define the name of the executable file.
 
-GS=gs
+GS=@GS@
 
 # Define the name of a pre-built executable that can be invoked at build
 # time.  Currently, this is only needed for compiled fonts.  The usual
@@ -222,7 +222,7 @@
 # defines from autoconf; note that we don't use these at present.
 ACDEFS=@DEFS@
 
-CFLAGS=$(CFLAGS_STANDARD) $(GCFLAGS) $(XCFLAGS)
+CFLAGS=@CFLAGS@ $(GCFLAGS) $(XCFLAGS)
 
 # Define platform flags for ld.
 # SunOS 4.n may need -Bstatic.
@@ -231,9 +231,9 @@
 #	-R /usr/local/xxx/lib:/usr/local/lib
 # giving the full path names of the shared library directories.
 # XLDFLAGS can be set from the command line.
-XLDFLAGS=
+XLDFLAGS=@XLDFLAGS@
 
-LDFLAGS=$(XLDFLAGS)
+LDFLAGS=@LDFLAGS@ $(XLDFLAGS)
 
 # Define any extra libraries to link into the executable.
 # ISC Unix 2.2 wants -linet.
@@ -242,7 +242,7 @@
 # Solaris may need -lnsl -lsocket -lposix4.
 # (Libraries required by individual drivers are handled automatically.)
 
-EXTRALIBS=
+EXTRALIBS=@LIBS@
 
 # Define the standard libraries to search at the end of linking.
 # Most platforms require -lpthread for the POSIX threads library;
@@ -317,7 +317,7 @@
 # Choose whether to compile the .ps initialization files into the executable.
 # See gs.mak for details.
 
-COMPILE_INITS=0
+COMPILE_INITS=@COMPILE_INITS@
 
 # Choose whether to store band lists on files or in memory.
 # The choices are 'file' or 'memory'.
@@ -353,30 +353,27 @@
 # devs.mak and contrib.mak for the list of available devices.
 
 #DEVICE_DEVS=$(DISPLAY_DEV) $(DD)x11.dev $(DD)x11alpha.dev $(DD)x11cmyk.dev $(DD)x11gray2.dev $(DD)x11gray4.dev $(DD)x11mono.dev
-DEVICE_DEVS=$(DISPLAY_DEV) @X11DEVS@
-
-DEVICE_DEVS1=$(DD)bmpmono.dev $(DD)bmpgray.dev $(DD)bmpsep1.dev $(DD)bmpsep8.dev $(DD)bmp16.dev $(DD)bmp256.dev $(DD)bmp16m.dev $(DD)bmp32b.dev
-DEVICE_DEVS2=
-DEVICE_DEVS3=$(DD)deskjet.dev $(DD)djet500.dev $(DD)laserjet.dev $(DD)ljetplus.dev $(DD)ljet2p.dev $(DD)ljet3.dev $(DD)ljet3d.dev $(DD)ljet4.dev $(DD)ljet4d.dev $(DD)lj5mono.dev $(DD)lj5gray.dev
-DEVICE_DEVS4=$(DD)cdeskjet.dev $(DD)cdjcolor.dev $(DD)cdjmono.dev $(DD)cdj550.dev $(DD)pj.dev $(DD)pjxl.dev $(DD)pjxl300.dev
-DEVICE_DEVS5=$(DD)uniprint.dev @IJSDEVS@ @STPDEVS@
-DEVICE_DEVS6=$(DD)bj10e.dev $(DD)bj200.dev $(DD)bjc600.dev $(DD)bjc800.dev
-DEVICE_DEVS7=$(DD)faxg3.dev $(DD)faxg32d.dev $(DD)faxg4.dev
-DEVICE_DEVS8=$(DD)pcxmono.dev $(DD)pcxgray.dev $(DD)pcx16.dev $(DD)pcx256.dev $(DD)pcx24b.dev $(DD)pcxcmyk.dev
-DEVICE_DEVS9=$(DD)pbm.dev $(DD)pbmraw.dev $(DD)pgm.dev $(DD)pgmraw.dev $(DD)pgnm.dev $(DD)pgnmraw.dev $(DD)pnm.dev $(DD)pnmraw.dev $(DD)ppm.dev $(DD)ppmraw.dev $(DD)pkm.dev $(DD)pkmraw.dev $(DD)pksm.dev $(DD)pksmraw.dev
-DEVICE_DEVS10=$(DD)tiffcrle.dev $(DD)tiffg3.dev $(DD)tiffg32d.dev $(DD)tiffg4.dev $(DD)tifflzw.dev $(DD)tiffpack.dev
-DEVICE_DEVS11=$(DD)tiff12nc.dev $(DD)tiff24nc.dev
-DEVICE_DEVS12=$(DD)psmono.dev $(DD)psgray.dev $(DD)psrgb.dev $(DD)bit.dev $(DD)bitrgb.dev $(DD)bitcmyk.dev
-#DEVICE_DEVS13=$(DD)pngmono.dev $(DD)pnggray.dev $(DD)png16.dev $(DD)png256.dev $(DD)png16m.dev
-DEVICE_DEVS13=@PNGDEVS@
-DEVICE_DEVS14=$(DD)jpeg.dev $(DD)jpeggray.dev
-DEVICE_DEVS15=$(DD)pdfwrite.dev $(DD)pswrite.dev $(DD)epswrite.dev $(DD)pxlmono.dev $(DD)pxlcolor.dev
-
+DEVICE_DEVS=$(DISPLAY_DEV) @X_DEVS@
+DEVICE_DEVS1=@CUPSDEV@
+DEVICE_DEVS2=@STPDEVS@
+DEVICE_DEVS3=@FILES@
+DEVICE_DEVS4=@PRINTERS@
+DEVICE_DEVS5=
+DEVICE_DEVS6=
+DEVICE_DEVS7=
+DEVICE_DEVS8=
+DEVICE_DEVS9=
+DEVICE_DEVS10=
+DEVICE_DEVS11=
+DEVICE_DEVS12=
+DEVICE_DEVS13=
+DEVICE_DEVS14=
+DEVICE_DEVS15=
 DEVICE_DEVS16=
 DEVICE_DEVS17=
 DEVICE_DEVS18=
 DEVICE_DEVS19=
-DEVICE_DEVS20=$(DD)cljet5.dev $(DD)cljet5c.dev
+DEVICE_DEVS20=
 
 # ---------------------------- End of options --------------------------- #
 
@@ -422,3 +419,4 @@
 include $(GLSRCDIR)/unix-dll.mak
 include $(GLSRCDIR)/unix-end.mak
 include $(GLSRCDIR)/unixinst.mak
+@CUPSINCLUDE@
diff -ur ghostscript-7.05/src/configure.ac espgs/src/configure.ac
--- ghostscript-7.05/src/configure.ac	Fri Apr 19 18:23:09 2002
+++ espgs/src/configure.ac	Tue Apr 23 11:08:36 2002
@@ -167,6 +167,234 @@
 AC_SUBST(LIBPNGDIR)
 AC_SUBST(PNGDEVS)
 
+dnl check to see if we want a different name for the executable...
+AC_ARG_WITH(gs,
+	[  --with-gs=NAME          Name of the Ghostscript exectuable, default=gs ],
+	GS="$withval", GS="gs")
+
+AC_SUBST(GS)
+
+dnl do we compile the Ghostscript initialization files into Ghostscript?
+COMPILE_INITS="0"
+AC_ARG_ENABLE(compiled-inits,
+	[  --enable-compiled-inits compile initialization files into Ghostscript, default=no],
+	COMPILE_INITS="1")
+
+AC_SUBST(COMPILE_INITS)
+
+dnl look for drivers to compile...
+AC_ARG_WITH(drivers,
+[  --with-drivers=LIST     Drivers to support, separated by commas.
+                          Either list the drivers or use aliases:
+                          ALL      = all drivers
+                          FILES    = all file format drivers
+                          PRINTERS = all printer drivers
+                          Printers:
+                          APPLE    = all Apple printers
+                          CANON    = all Canon printers
+                          EPSON    = all Epson printers
+                          HP       = all HP printers
+                          IBM      = all IBM printers
+                          IJS      = all printers using IJS
+                          LEXMARK  = all Lexmark printers
+                          OKI      = all OKI printers
+                          File formats:
+                          BMP      = Output to bmp files
+                          FAX      = Output to fax files
+                          JPEG     = Output to JPEG files
+                          PBM      = Output to PBM/PNM
+                          PCX      = Output to PCX
+                          PS       = Output to PostScript/PDF
+                          TIFF     = Output to TIFF
+                          You can mix both variants, e.g.
+                          --with-drivers=HP,stcolor would build HP drivers and
+                          the Epson stcolor driver.
+                          Aliases must be uppercase (a 3rd party driver might
+                          have the same name).
+                          Default: ALL],drivers="$withval",drivers="ALL")
+
+AC_ARG_WITH(driversfile,
+[  --with-driversfile=FILE Drivers to support from file, separated by newlines.],
+driversfile="$withval",driversfile="")
+
+if test "x$driversfile" != x; then
+	# Add drivers from file...
+	drivers="`tr '\n' ',' <$driversfile`"
+fi
+
+dnl Check which drivers we'd like to support.
+P_DEVS=""
+F_DEVS=""
+
+dnl Known printers
+HP_DEVS="cdj500 djet500c dnj650c cljet5pr deskjet laserjet ljetplus ljet2p ljet3 ljet3d ljet4 ljet4d lj5mono lj5gray cdeskjet cdjcolor cdjmono cdj550 pj pjxl pjxl300 lp2563 paintjet pjetxl cljet5 cljet5c pxlmono pxlcolor"
+IJS_DEVS="ijs"
+EPSON_DEVS="eps9high eps9mid epson epsonc escp lp8000 lq850 photoex st800 stcolor"
+CANON_DEVS="bj10e bj200 bjc600 bjc800 lbp8"
+LEXMARK_DEVS="lxm5700m"
+APPLE_DEVS="appledmp iwhi iwlo iwlq"
+IBM_DEVS="ibmpro jetp3852"
+OKI_DEVS="oki182 okiibm"
+MISC_PDEVS="uniprint ap3250 atx23 atx24 atx38 coslw2p coslwxl cp50 declj250 fs600 imagen lj250 m8510 necp6 oce9050 r4081 sj48 tek4696"
+
+dnl Known file formats
+BMP_DEVS="bmpmono bmpgray bmpsep1 bmpsep8 bmp16 bmp256 bmp16m bmp32b bmpa16 bmpa16m bmpa256 bmpa32b bmpamono bmpasep1 bmpasep8"
+FAX_DEVS="cfax dfaxlow dfaxhigh fax tfax tiffg3 tiffg32d tiffg4 faxg3 faxg32d faxg4"
+JPEG_DEVS="jpeg jpeggray"
+TIFF_DEVS="tiffs tiff12nc tiff24nc tiffcrle tifflzw tiffpack"
+PCX_DEVS="pcxmono pcxgray pcx16 pcx256 pcx24b pcxcmyk"
+PBM_DEVS="pbm pbmraw pgm pgmraw pgnm pgnmraw pnm pnmraw ppm ppmraw pkm pkmraw pksm pksmraw"
+PS_DEVS="psdf pdfwrite pswrite epswrite psgray psmono psrgb"
+MISC_FDEVS="ccr cgm24 cgm8 cgmmono inferno mgr4 mgr8 mgrgray2 mgrgray4 mgrgray8 mgrmono miff24 plan9bm sgirgb sunhmono bit bitrgb bitcmyk"
+
+while test -n "$drivers"; do
+	if echo $drivers |grep -q ","; then
+		THIS="`echo $drivers |sed -e 's/,.*//'`"
+		drivers="`echo $drivers |sed -e \"s/$THIS,//\"`"
+	else
+		THIS=$drivers
+		drivers=""
+	fi
+	case "$THIS" in
+	ALL)
+		# ALL = PRINTERS + FILES...
+		if test -z "$drivers"; then
+			drivers="PRINTERS,FILES"
+		else
+			drivers="$drivers,PRINTERS,FILES"
+		fi
+		;;
+	PRINTERS)
+		P_DEVS="$P_DEVS $CANON_DEVS $EPSON_DEVS $HP_DEVS $IJS_DEVS $LEXMARK_DEVS $APPLE_DEVS $IBM_DEVS $OKI_DEVS $MISC_PDEVS"
+		;;
+	FILES)
+		F_DEVS="$F_DEVS $BMP_DEVS $FAX_DEVS $JPEG_DEVS $PNG_DEVS $TIFF_DEVS $PCX_DEVS $PBM_DEVS $PS_DEVS $MISC_FDEVS"
+		;;
+	APPLE)
+		# All Apple printers
+		P_DEVS="$P_DEVS $APPLE_DEVS"
+		;;
+	BMP)
+		# BMP file format
+		F_DEVS="$F_DEVS $BMP_DEVS"
+		;;
+	CANON)
+		# All Canon printers
+		P_DEVS="$P_DEVS $CANON_DEVS"
+		;;
+	EPSON)
+		# All Epson printers
+		P_DEVS="$P_DEVS $EPSON_DEVS"
+		;;
+	FAX)
+		# Fax file formats
+		F_DEVS="$F_DEVS $FAX_DEVS"
+		;;
+	JPEG)
+		# Jpeg file formats
+		F_DEVS="$F_DEVS $JPEG_DEVS"
+		;;
+	PNG)
+		# PNG file formats
+		F_DEVS="$F_DEVS $PNG_DEVS"
+		;;
+	TIFF)
+		# TIFF file formats
+		F_DEVS="$F_DEVS $TIFF_DEVS"
+		;;
+	PCX)
+		# PCX file formats
+		F_DEVS="$F_DEVS $PCX_DEVS"
+		;;
+	PBM)
+		# PBM file formats
+		F_DEVS="$F_DEVS $PBM_DEVS"
+		;;
+	HP)
+		# All HP printers
+		P_DEVS="$P_DEVS $HP_DEVS $IJS_DEVS"
+		;;
+	LEXMARK)
+		# All Lexmark printers
+		P_DEVS="$P_DEVS $LEXMARK_DEVS"
+		;;
+	OKI)
+		# All OKI printers
+		P_DEVS="$P_DEVS $OKI_DEVS"
+		;;
+	IBM)
+		# All IBM printers
+		P_DEVS="$P_DEVS $IBM_DEVS"
+		;;
+	IJS)
+		# All printers using IJS
+		P_DEVS="$P_DEVS $IJS_DEVS"
+		;;
+	PS)
+		# PostScript/PDF writing
+		F_DEVS="$F_DEVS $PS_DEVS"
+		;;
+	*)
+		# It's a driver name (or a user messup)
+		P_DEVS="$P_DEVS `echo $THIS |sed -e 's,\.dev$,,'`"
+		;;
+	esac
+done
+# Make sure we don't have any duplicates in there, add $(DD)foo.dev constructs
+if test -n "$P_DEVS"; then
+	PRINTERS=`(for i in $P_DEVS; do echo '$('DD')'${i}.dev; done) | sort | uniq |xargs echo`
+fi
+if test -n "$F_DEVS"; then
+	FILES=`(for i in $F_DEVS; do echo '$('DD')'${i}.dev; done) | sort | uniq |xargs echo`
+fi
+echo "PRINTERS: $PRINTERS" >>FOO
+echo "FILES: $FILES" >>FOO
+AC_SUBST(PRINTERS)
+AC_SUBST(FILES)
+
+dnl look for default font path...
+AC_ARG_WITH(fontpath, [  --with-fontpath         set font path for gs],fontpath="$withval",fontpath="")
+
+dnl Fix "fontpath" variable...
+if test "x$fontpath" = "x"; then
+	# These font directories are used by various Linux distributions...
+	fontpath="$datadir/fonts/default/ghostscript"
+	fontpath="${fontpath}:$datadir/fonts/default/Type1"
+	fontpath="${fontpath}:$datadir/fonts/default/TrueType"
+fi
+
+AC_SUBST(fontpath)
+
+dnl look for CUPS...
+AC_ARG_ENABLE(cups, [  --enable-cups           turn on CUPS support, default=yes])
+
+CUPSDEV=""
+CUPSINCLUDE=""
+CUPSCONFIG=":"
+cups_serverroot="/etc/cups"
+cups_serverbin="/usr/lib/cups"
+
+if test -d pstoraster; then
+    if test x$enable_cups != xno; then
+	AC_PATH_PROG(CUPSCONFIG,cups-config)
+	if test "x$CUPSCONFIG" != x; then
+	    dnl Use values from CUPS config...
+	    LIBS="`$CUPSCONFIG --ldflags` `$CUPSCONFIG --image --libs` $LIBS"
+	    CFLAGS="`$CUPSCONFIG --cflags` $CFLAGS"
+	    cups_serverroot="`$CUPSCONFIG --serverroot`"
+	    cups_serverbin="`$CUPSCONFIG --serverbin`"
+	    CUPSINCLUDE="include pstoraster/cups.mak"
+	    CUPSDEV="\$(DD)cups.dev"
+	fi
+    fi
+fi
+
+AC_SUBST(CUPSDEV)
+AC_SUBST(CUPSCONFIG)
+AC_SUBST(CUPSINCLUDE)
+AC_SUBST(cups_serverroot)
+AC_SUBST(cups_serverbin)
+
 dnl look for IJS implementation
 AC_ARG_WITH(ijs, AC_HELP_STRING([--with-ijs],[include IJS driver support]))
 dnl set safe defaults
@@ -202,15 +430,52 @@
 AC_SUBST(STPDEVS)
 
 dnl optional X11 for display devices
-AC_PATH_XTRA
-if test x"$no_x" = x"yes"; then
-	AC_MSG_NOTICE([disabling X11 output devices])
-	X11DEVS=''
-else
-	X11DEVS='$(DD)x11.dev $(DD)x11alpha.dev $(DD)x11cmyk.dev $(DD)x11gray2.dev $(DD)x11gray4.dev $(DD)x11mono.dev'
+AC_PATH_X
+
+XLDFLAGS=""
+X_CFLAGS=""
+X_DEVS=""
+X_LIBS=""
+
+if test x$no_x != xyes; then
+	if test "$x_libraries" = "/usr/lib"; then
+		echo "Ignoring X library directory \"$x_libraries\" requested by configure."
+		x_libraries="NONE"
+	fi
+	if test ! "$x_libraries" = "NONE" -a ! "$x_libraries" = ""; then
+		LDFLAGS="-L$x_libraries $LDFLAGS"
+		XLDFLAGS="-L$x_libraries"
+		if test "$uname" = "SunOS"; then
+			XLDFLAGS="$XLDFLAGS -R$x_libraries"
+		fi
+	fi
+
+	if test "$x_includes" = "/usr/include"; then
+		echo "Ignoring X include directory \"$x_includes\" requested by configure."
+		x_includes="NONE"
+	fi
+	if test ! "$x_includes" = "NONE" -a ! "$x_includes" = ""; then
+		X_CFLAGS="-I$x_includes"
+	fi
+
+	SAVELIBS="$LIBS"
+
+	AC_CHECK_LIB(X11,XOpenDisplay)
+	AC_CHECK_LIB(Xext,XdbeQueryExtension)
+	AC_CHECK_LIB(Xt,XtAppCreateShell)
+
+	LIBS="$SAVELIBS"
+
+	if test "$ac_cv_lib_Xt_XtAppCreateShell" = yes; then
+		X_DEVS="\$(DD)x11.dev \$(DD)x11alpha.dev \$(DD)x11cmyk.dev \$(DD)x11mono.dev \$(DD)x11_.dev \$(DD)x11alt_.dev \$(DD)x11cmyk2.dev \$(DD)x11cmyk4.dev \$(DD)x11cmyk8.dev \$(DD)x11rg16x.dev \$(DD)x11rg32x.dev"
+		X_LIBS="-lXt -lXext -lX11"
+	fi
 fi
-AC_SUBST(X11DEVS)
 
+AC_SUBST(XLDFLAGS)
+AC_SUBST(X_CFLAGS)
+AC_SUBST(X_LIBS)
+AC_SUBST(X_DEVS)
 
 dnl --------------------------------------------------
 dnl Check for library functions
@@ -233,4 +498,9 @@
 dnl --------------------------------------------------
 
 AC_SUBST(GCFLAGS)
-AC_OUTPUT(Makefile)
+
+if test -d pstoraster; then
+	AC_OUTPUT(Makefile pstoraster/pstoraster)
+else
+	AC_OUTPUT(Makefile)
+fi
