README.pstoraster - 04/23/2002
------------------------------

INTRODUCTION

    This directory contains the CUPS "driver" for GNU
    Ghostscript, the pstoraster script that is used to run
    Ghostscript as a CUPS filter, the pstoraster.convs file that
    defines the PostScript to raster filter for CUPS drivers,
    and a makefile fragment that adds the CUPS driver.

    This software is included with both the CUPS and ESP
    Ghostscript 7.05.1 distributions.  While the files will also
    compile with earlier versions of Ghostscript, there are bugs
    in older versions of GNU Ghostscript which may cause
    problems.


COMPILING ESP GHOSTSCRIPT WITH THE CUPS DRIVER

    Normally the CUPS driver will be automatically included when
    you use the configure script supplied with ESP Ghostscript.
    To use the CUPS driver with the traditional Ghostscript
    makefiles, add the following include line to the end of the
    makefile:

        include pstoraster/cups.mak

    Then add "$(DD)cups.dev" to any of the DEVICE_DEVS lines.

    Once you have compiled and installed Ghostscript, restart
    the cupsd process, either by sending the HUP signal to the
    process or using the init script supplied with CUPS.


COMPILING GNU GHOSTSCRIPT WITH THE CUPS DRIVER

    Before configuring GNU Ghostscript, first copy this directory
    to the GNU Ghostscript source directory, e.g.:

        cp -r pstoraster /some/path/to/ghostscript-7.05

    Next apply the patch:

        cd /some/path/to/ghostscript-7.05
        patch -p1 pstoraster/ghostscript-705.patch

    Finally, run the configure script to use the new Ghostscript
    with CUPS:

        ./configure [any configure options you want]

    To use the CUPS driver with the traditional Ghostscript
    makefiles, add the following include line to the end of the
    makefile:

        include pstoraster/cups.mak

    Then add "$(DD)cups.dev" to any of the DEVICE_DEVS lines.

    Once you have compiled and installed Ghostscript, restart
    the cupsd process, either by sending the HUP signal to the
    process or using the init script supplied with CUPS.
